package Randoop.junits.NewsletterTest;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        java.lang.Class<?> wildcardClass1 = letterPublisher0.getClass();
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = newsletter2.isSubscribed(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.Class<?> wildcardClass5 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass8 = newsletter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (short) -1);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        double double8 = newsletter2.getCost();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter2.getName();
        objects.User user15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = newsletter2.isSubscribed(user15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = newsletter2.isSubscribed(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        double double5 = newsletter2.getCost();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = newsletter2.isSubscribed(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        java.lang.Class<?> wildcardClass3 = newsletter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.USATODAY;
        java.lang.Class<?> wildcardClass1 = letterPublisher0.getClass();
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass5 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (short) -1);
        double double16 = newsletter15.getCost();
        java.lang.Class<?> wildcardClass17 = newsletter15.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (short) -1);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        java.lang.String str3 = newsletter2.getUrl();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = newsletter2.isSubscribed(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "https://www.usatoday.com/" + "'", str3, "https://www.usatoday.com/");
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = newsletter2.isSubscribed(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        double double10 = newsletter2.getCost();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        java.lang.Class<?> wildcardClass26 = letterPublisher23.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        java.lang.String str3 = newsletter2.getUrl();
        java.lang.Class<?> wildcardClass4 = newsletter2.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "https://www.usatoday.com/" + "'", str3, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.User user41 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        double double10 = newsletter2.getCost();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher3);
        java.lang.Class<?> wildcardClass5 = letterPublisher3.getClass();
        org.junit.Assert.assertTrue("'" + letterPublisher3 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher3.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        java.lang.Class<?> wildcardClass8 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher3);
        newsletter2.setCost(1);
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher3 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher3.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        java.lang.String str7 = newsletter2.getUrl();
        java.lang.Class<?> wildcardClass8 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.User user14 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        newsletter10.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher13 = null;
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.String str18 = newsletter15.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter15.setName(letterPublisher19);
        newsletter10.setName(letterPublisher19);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher19, 10.0d);
        newsletter2.setName(letterPublisher19);
        java.lang.Class<?> wildcardClass25 = letterPublisher19.getClass();
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 10.0d);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = newsletter15.isSubscribed(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = newsletter15.isSubscribed(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) ' ');
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = newsletter12.isSubscribed(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 10.0d);
        java.lang.String str16 = newsletter15.getUrl();
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "https://www.nytimes.com/" + "'", str16, "https://www.nytimes.com/");
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        newsletter15.setCost((int) (byte) 100);
        java.lang.Class<?> wildcardClass18 = newsletter15.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 10);
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 10L);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.unsubscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str5 = newsletter2.getUrl();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = newsletter2.isSubscribed(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher9 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter8.setName(letterPublisher9);
        newsletter2.setName(letterPublisher9);
        objects.User user12 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher9 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher9.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (-1.0d));
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter12.subscribe(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        newsletter8.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter13.getName();
        java.lang.String str16 = newsletter13.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher17 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter13.setName(letterPublisher17);
        newsletter8.setName(letterPublisher17);
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher17, (double) (byte) -1);
        newsletter2.setName(letterPublisher17);
        objects.User user23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = newsletter2.isSubscribed(user23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "https://www.usatoday.com/" + "'", str16, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.WASHINGTONPOST;
        newsletter2.setName(letterPublisher6);
        newsletter2.displayNews();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str5 = newsletter2.getUrl();
        newsletter2.setCost(100);
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 10);
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass8 = newsletter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        objects.User user29 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 10.0d);
        java.lang.String str16 = newsletter15.getUrl();
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "https://www.nytimes.com/" + "'", str16, "https://www.nytimes.com/");
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher21, (double) ' ');
        objects.User user26 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter25.unsubscribe(user26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher9 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter8.setName(letterPublisher9);
        newsletter2.setName(letterPublisher9);
        objects.User user12 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher9 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher9.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        java.lang.String str15 = newsletter2.getUrl();
        newsletter2.displayNews();
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 10.0d);
        java.lang.Class<?> wildcardClass16 = newsletter15.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher3);
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher3 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher3.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        java.lang.Class<?> wildcardClass17 = letterPublisher14.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        newsletter15.setCost(100);
        java.lang.Class<?> wildcardClass18 = newsletter15.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        double double8 = newsletter2.getCost();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 0L);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.subscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        java.lang.Class<?> wildcardClass24 = letterPublisher18.getClass();
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.User user14 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) (short) 100);
        java.lang.Class<?> wildcardClass6 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        java.lang.Class<?> wildcardClass41 = letterPublisher37.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher25, 32.0d);
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter30.accept(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = newsletter2.isSubscribed(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        java.lang.String str24 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        newsletter31.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        java.lang.String str39 = newsletter36.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher40 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter36.setName(letterPublisher40);
        newsletter31.setName(letterPublisher40);
        objects.Newsletter.LetterPublisher letterPublisher43 = null;
        objects.Newsletter newsletter45 = new objects.Newsletter(letterPublisher43, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher46 = newsletter45.getName();
        objects.Newsletter.LetterPublisher letterPublisher47 = newsletter45.getName();
        newsletter45.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher50 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter45.setName(letterPublisher50);
        newsletter31.setName(letterPublisher50);
        newsletter27.setName(letterPublisher50);
        newsletter2.setName(letterPublisher50);
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass56 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.nytimes.com/" + "'", str24, "https://www.nytimes.com/");
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "https://www.usatoday.com/" + "'", str39, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher46);
        org.junit.Assert.assertNull(letterPublisher47);
        org.junit.Assert.assertTrue("'" + letterPublisher50 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher50.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        double double7 = newsletter2.getCost();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 100L);
        newsletter2.displayNews();
        java.lang.String str4 = newsletter2.getUrl();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "https://www.nytimes.com/" + "'", str4, "https://www.nytimes.com/");
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        java.lang.String str36 = newsletter2.getUrl();
        objects.User user37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = newsletter2.isSubscribed(user37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "https://www.usatoday.com/" + "'", str36, "https://www.usatoday.com/");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        java.lang.String str36 = newsletter2.getUrl();
        objects.User user37 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "https://www.usatoday.com/" + "'", str36, "https://www.usatoday.com/");
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        objects.User user19 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = letterPublisher4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.displayNews();
        double double9 = newsletter2.getCost();
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 32.0d + "'", double9 == 32.0d);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher23 = null;
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher23, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter25.getName();
        newsletter25.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher28 = null;
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher28, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher31 = newsletter30.getName();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        java.lang.String str33 = newsletter30.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher34 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter30.setName(letterPublisher34);
        newsletter25.setName(letterPublisher34);
        objects.Newsletter.LetterPublisher letterPublisher37 = null;
        objects.Newsletter newsletter39 = new objects.Newsletter(letterPublisher37, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter39.getName();
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter39.getName();
        newsletter39.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher44 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter39.setName(letterPublisher44);
        newsletter25.setName(letterPublisher44);
        newsletter22.setName(letterPublisher44);
        newsletter2.setName(letterPublisher44);
        objects.User user49 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher26);
        org.junit.Assert.assertNull(letterPublisher31);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "https://www.usatoday.com/" + "'", str33, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher34 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher34.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertTrue("'" + letterPublisher44 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher44.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        double double10 = newsletter2.getCost();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = newsletter2.isSubscribed(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (-1.0d));
        java.lang.Class<?> wildcardClass13 = letterPublisher10.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) (byte) -1);
        java.lang.Class<?> wildcardClass10 = newsletter9.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.displayNews();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        double double4 = newsletter2.getCost();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 100);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = newsletter9.isSubscribed(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        double double8 = newsletter2.getCost();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = newsletter2.isSubscribed(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        newsletter11.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher16 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter11.setName(letterPublisher16);
        java.lang.String str18 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter11.getName();
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (-1.0d));
        newsletter2.setName(letterPublisher19);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher19, 0.0d);
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter24.subscribe(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        newsletter15.displayNews();
        objects.User user30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = newsletter15.isSubscribed(user30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = newsletter2.isSubscribed(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        newsletter11.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher16 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter11.setName(letterPublisher16);
        java.lang.String str18 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter11.getName();
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (-1.0d));
        newsletter2.setName(letterPublisher19);
        objects.User user23 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.setCost((int) 'a');
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        newsletter8.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter13.getName();
        java.lang.String str16 = newsletter13.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher17 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter13.setName(letterPublisher17);
        newsletter8.setName(letterPublisher17);
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher17, (double) (short) -1);
        newsletter2.setName(letterPublisher17);
        java.lang.Class<?> wildcardClass23 = newsletter2.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "https://www.usatoday.com/" + "'", str16, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 10);
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.setCost((int) 'a');
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        java.lang.String str24 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        newsletter31.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        java.lang.String str39 = newsletter36.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher40 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter36.setName(letterPublisher40);
        newsletter31.setName(letterPublisher40);
        objects.Newsletter.LetterPublisher letterPublisher43 = null;
        objects.Newsletter newsletter45 = new objects.Newsletter(letterPublisher43, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher46 = newsletter45.getName();
        objects.Newsletter.LetterPublisher letterPublisher47 = newsletter45.getName();
        newsletter45.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher50 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter45.setName(letterPublisher50);
        newsletter31.setName(letterPublisher50);
        newsletter27.setName(letterPublisher50);
        newsletter2.setName(letterPublisher50);
        newsletter2.displayNews();
        objects.User user56 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.nytimes.com/" + "'", str24, "https://www.nytimes.com/");
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "https://www.usatoday.com/" + "'", str39, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher46);
        org.junit.Assert.assertNull(letterPublisher47);
        org.junit.Assert.assertTrue("'" + letterPublisher50 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher50.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        double double4 = newsletter2.getCost();
        java.lang.String str5 = newsletter2.getUrl();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        java.lang.Class<?> wildcardClass5 = newsletter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) 1.0f);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        java.lang.String str24 = newsletter2.getUrl();
        java.lang.Class<?> wildcardClass25 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.nytimes.com/" + "'", str24, "https://www.nytimes.com/");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        double double17 = newsletter2.getCost();
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = newsletter2.isSubscribed(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        java.lang.String str15 = newsletter2.getUrl();
        newsletter2.displayNews();
        java.lang.String str17 = newsletter2.getUrl();
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = newsletter2.isSubscribed(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) (byte) -1);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.subscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        objects.Newsletter newsletter37 = new objects.Newsletter(letterPublisher32, 0.0d);
        java.lang.Class<?> wildcardClass38 = newsletter37.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 1.0f);
        newsletter12.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = null;
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter19.getName();
        newsletter19.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher22 = null;
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher22, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter24.getName();
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter24.getName();
        java.lang.String str27 = newsletter24.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher28 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter24.setName(letterPublisher28);
        newsletter19.setName(letterPublisher28);
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher28, (double) (short) -1);
        newsletter12.setName(letterPublisher28);
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        java.lang.String str39 = newsletter36.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher40 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter36.setName(letterPublisher40);
        newsletter12.setName(letterPublisher40);
        newsletter9.setName(letterPublisher40);
        objects.User user44 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.subscribe(user44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertNull(letterPublisher26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.usatoday.com/" + "'", str27, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher28 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher28.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "https://www.usatoday.com/" + "'", str39, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.User user15 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        newsletter2.displayNews();
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        java.lang.String str3 = newsletter2.getUrl();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "https://www.usatoday.com/" + "'", str3, "https://www.usatoday.com/");
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = newsletter2.isSubscribed(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 10);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.subscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher15 = null;
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher15, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter17.getName();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter17.getName();
        java.lang.String str20 = newsletter17.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter17.setName(letterPublisher21);
        newsletter12.setName(letterPublisher21);
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter26.getName();
        newsletter26.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter26.setName(letterPublisher31);
        newsletter12.setName(letterPublisher31);
        newsletter8.setName(letterPublisher31);
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher31, 32.0d);
        newsletter2.setName(letterPublisher31);
        newsletter2.setCost((int) '#');
        java.lang.Class<?> wildcardClass40 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "https://www.usatoday.com/" + "'", str20, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        java.lang.String str15 = newsletter2.getUrl();
        newsletter2.displayNews();
        java.lang.String str17 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        newsletter23.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher26 = null;
        objects.Newsletter newsletter28 = new objects.Newsletter(letterPublisher26, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter28.getName();
        objects.Newsletter.LetterPublisher letterPublisher30 = newsletter28.getName();
        java.lang.String str31 = newsletter28.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter28.setName(letterPublisher32);
        newsletter23.setName(letterPublisher32);
        objects.Newsletter.LetterPublisher letterPublisher35 = newsletter23.getName();
        newsletter20.setName(letterPublisher35);
        newsletter2.setName(letterPublisher35);
        objects.User user38 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertNull(letterPublisher30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher35 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher35.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        newsletter2.setCost((int) '#');
        newsletter2.displayNews();
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) (short) 100);
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = newsletter2.isSubscribed(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        java.lang.Class<?> wildcardClass28 = letterPublisher26.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) (short) 100);
        newsletter2.setCost((int) (byte) 1);
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = newsletter15.isSubscribed(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter2.getName();
        java.lang.Class<?> wildcardClass10 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher9 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher9.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        double double8 = newsletter2.getCost();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter2.getName();
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher9);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        java.lang.Class<?> wildcardClass19 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        double double4 = newsletter2.getCost();
        java.lang.String str5 = newsletter2.getUrl();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        java.lang.String str6 = newsletter2.getUrl();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.WASHINGTONPOST;
        newsletter2.setName(letterPublisher6);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher15, (double) 10L);
        newsletter2.setName(letterPublisher15);
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = letterPublisher3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        newsletter11.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher16 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter11.setName(letterPublisher16);
        java.lang.String str18 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter11.getName();
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (-1.0d));
        newsletter2.setName(letterPublisher19);
        java.lang.String str23 = newsletter2.getUrl();
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "https://www.usatoday.com/" + "'", str23, "https://www.usatoday.com/");
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) ' ');
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter12.subscribe(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher21, (double) ' ');
        java.lang.Class<?> wildcardClass26 = letterPublisher21.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        java.lang.Class<?> wildcardClass6 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 1.0f);
        newsletter12.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = null;
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter19.getName();
        newsletter19.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher22 = null;
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher22, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter24.getName();
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter24.getName();
        java.lang.String str27 = newsletter24.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher28 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter24.setName(letterPublisher28);
        newsletter19.setName(letterPublisher28);
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher28, (double) (short) -1);
        newsletter12.setName(letterPublisher28);
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        java.lang.String str39 = newsletter36.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher40 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter36.setName(letterPublisher40);
        newsletter12.setName(letterPublisher40);
        newsletter9.setName(letterPublisher40);
        objects.User user44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = newsletter9.isSubscribed(user44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertNull(letterPublisher26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.usatoday.com/" + "'", str27, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher28 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher28.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "https://www.usatoday.com/" + "'", str39, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        double double8 = newsletter2.getCost();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher14, (double) (-1L));
        java.lang.Class<?> wildcardClass19 = newsletter18.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher15 = null;
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher15, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter17.getName();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter17.getName();
        java.lang.String str20 = newsletter17.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter17.setName(letterPublisher21);
        newsletter12.setName(letterPublisher21);
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter26.getName();
        newsletter26.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter26.setName(letterPublisher31);
        newsletter12.setName(letterPublisher31);
        newsletter8.setName(letterPublisher31);
        newsletter2.setName(letterPublisher31);
        objects.User user36 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "https://www.usatoday.com/" + "'", str20, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) (short) 100);
        newsletter2.setCost((int) (byte) 1);
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = newsletter2.isSubscribed(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 1L);
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter12.subscribe(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher23 = null;
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher23, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter25.getName();
        newsletter25.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher28 = null;
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher28, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher31 = newsletter30.getName();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        java.lang.String str33 = newsletter30.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher34 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter30.setName(letterPublisher34);
        newsletter25.setName(letterPublisher34);
        objects.Newsletter.LetterPublisher letterPublisher37 = null;
        objects.Newsletter newsletter39 = new objects.Newsletter(letterPublisher37, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter39.getName();
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter39.getName();
        newsletter39.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher44 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter39.setName(letterPublisher44);
        newsletter25.setName(letterPublisher44);
        newsletter22.setName(letterPublisher44);
        newsletter2.setName(letterPublisher44);
        objects.Newsletter.LetterPublisher letterPublisher49 = newsletter2.getName();
        objects.User user50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = newsletter2.isSubscribed(user50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher26);
        org.junit.Assert.assertNull(letterPublisher31);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "https://www.usatoday.com/" + "'", str33, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher34 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher34.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertTrue("'" + letterPublisher44 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher44.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher49 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher49.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        newsletter15.displayNews();
        java.lang.Class<?> wildcardClass30 = newsletter15.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        newsletter15.setCost((int) (byte) 100);
        newsletter15.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter15.getName();
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        newsletter11.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher16 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter11.setName(letterPublisher16);
        java.lang.String str18 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter11.getName();
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (-1.0d));
        newsletter2.setName(letterPublisher19);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher19, 0.0d);
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter24.unsubscribe(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher37, (double) 'a');
        double double43 = newsletter42.getCost();
        objects.User user44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = newsletter42.isSubscribed(user44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 97.0d + "'", double43 == 97.0d);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher18, (double) 1);
        java.lang.Class<?> wildcardClass26 = newsletter25.getClass();
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        double double19 = newsletter2.getCost();
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.setCost(10);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        newsletter2.displayNews();
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = newsletter2.isSubscribed(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 10);
        newsletter2.displayNews();
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass9 = newsletter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 'a');
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher10, 10.0d);
        objects.User user15 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter14.subscribe(user15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        double double10 = newsletter2.getCost();
        newsletter2.setCost((int) (byte) 0);
        newsletter2.setCost((int) (byte) 1);
        objects.User user15 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        newsletter2.displayNews();
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = newsletter2.isSubscribed(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) -1);
        java.lang.String str10 = newsletter2.getUrl();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher18, (double) 1);
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher18, (double) 10.0f);
        objects.User user28 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter27.accept(user28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter16.accept(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        newsletter13.setCost((int) ' ');
        double double17 = newsletter13.getCost();
        double double18 = newsletter13.getCost();
        newsletter13.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher31, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher36 = null;
        objects.Newsletter newsletter38 = new objects.Newsletter(letterPublisher36, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher39 = newsletter38.getName();
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter38.getName();
        newsletter38.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher43 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter38.setName(letterPublisher43);
        newsletter35.setName(letterPublisher43);
        newsletter13.setName(letterPublisher43);
        newsletter2.setName(letterPublisher43);
        java.lang.Class<?> wildcardClass48 = letterPublisher43.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher39);
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertTrue("'" + letterPublisher43 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher43.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter16.unsubscribe(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher15 = null;
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher15, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter17.getName();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter17.getName();
        java.lang.String str20 = newsletter17.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter17.setName(letterPublisher21);
        newsletter12.setName(letterPublisher21);
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter26.getName();
        newsletter26.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter26.setName(letterPublisher31);
        newsletter12.setName(letterPublisher31);
        newsletter8.setName(letterPublisher31);
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher31, 32.0d);
        newsletter2.setName(letterPublisher31);
        newsletter2.setCost((int) '#');
        objects.User user40 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "https://www.usatoday.com/" + "'", str20, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        java.lang.Class<?> wildcardClass6 = newsletter2.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        newsletter10.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher13 = null;
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.String str18 = newsletter15.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter15.setName(letterPublisher19);
        newsletter10.setName(letterPublisher19);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher19, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        newsletter26.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter31.getName();
        java.lang.String str34 = newsletter31.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher35 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter31.setName(letterPublisher35);
        newsletter26.setName(letterPublisher35);
        objects.Newsletter.LetterPublisher letterPublisher38 = null;
        objects.Newsletter newsletter40 = new objects.Newsletter(letterPublisher38, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter40.getName();
        objects.Newsletter.LetterPublisher letterPublisher42 = newsletter40.getName();
        newsletter40.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher45 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter40.setName(letterPublisher45);
        newsletter26.setName(letterPublisher45);
        newsletter23.setName(letterPublisher45);
        newsletter2.setName(letterPublisher45);
        java.lang.String str50 = newsletter2.getUrl();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "https://www.usatoday.com/" + "'", str34, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher35 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher35.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertNull(letterPublisher42);
        org.junit.Assert.assertTrue("'" + letterPublisher45 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher45.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "https://www.usatoday.com/" + "'", str50, "https://www.usatoday.com/");
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        double double5 = newsletter2.getCost();
        java.lang.String str6 = newsletter2.getUrl();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        double double10 = newsletter2.getCost();
        newsletter2.setCost((int) (byte) 0);
        java.lang.Class<?> wildcardClass13 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        java.lang.Class<?> wildcardClass24 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        newsletter10.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher13 = null;
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.String str18 = newsletter15.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter15.setName(letterPublisher19);
        newsletter10.setName(letterPublisher19);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher19, 10.0d);
        newsletter2.setName(letterPublisher19);
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = newsletter2.isSubscribed(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher25, 32.0d);
        java.lang.String str31 = newsletter30.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        objects.Newsletter newsletter34 = new objects.Newsletter(letterPublisher32, (double) (short) 0);
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher32, 97.0d);
        objects.User user37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = newsletter36.isSubscribed(user37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 10);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.accept(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        java.lang.String str24 = newsletter2.getUrl();
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.usatoday.com/" + "'", str24, "https://www.usatoday.com/");
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 1L);
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter12.accept(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = newsletter2.isSubscribed(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        double double10 = newsletter2.getCost();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        newsletter15.setCost((int) (byte) 100);
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        newsletter15.setCost((int) (byte) 100);
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.unsubscribe(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = newsletter2.isSubscribed(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        objects.Newsletter newsletter37 = new objects.Newsletter(letterPublisher32, 0.0d);
        objects.User user38 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = newsletter37.isSubscribed(user38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        newsletter2.displayNews();
        java.lang.String str25 = newsletter2.getUrl();
        objects.User user26 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "https://www.usatoday.com/" + "'", str25, "https://www.usatoday.com/");
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter2.getName();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher7);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        java.lang.String str3 = newsletter2.getUrl();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "https://www.usatoday.com/" + "'", str3, "https://www.usatoday.com/");
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, 100.0d);
        double double10 = newsletter9.getCost();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.unsubscribe(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        newsletter15.setCost((int) (short) 100);
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        double double7 = newsletter2.getCost();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        java.lang.String str28 = newsletter15.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter15.getName();
        newsletter15.displayNews();
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = newsletter15.isSubscribed(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "https://www.usatoday.com/" + "'", str28, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher29 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher29.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (short) -1);
        double double16 = newsletter15.getCost();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, 0.0d);
        newsletter19.displayNews();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        objects.User user29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = newsletter15.isSubscribed(user29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher23 = null;
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher23, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter25.getName();
        newsletter25.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher28 = null;
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher28, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher31 = newsletter30.getName();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        java.lang.String str33 = newsletter30.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher34 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter30.setName(letterPublisher34);
        newsletter25.setName(letterPublisher34);
        objects.Newsletter.LetterPublisher letterPublisher37 = null;
        objects.Newsletter newsletter39 = new objects.Newsletter(letterPublisher37, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter39.getName();
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter39.getName();
        newsletter39.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher44 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter39.setName(letterPublisher44);
        newsletter25.setName(letterPublisher44);
        newsletter22.setName(letterPublisher44);
        newsletter2.setName(letterPublisher44);
        java.lang.Class<?> wildcardClass49 = letterPublisher44.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher26);
        org.junit.Assert.assertNull(letterPublisher31);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "https://www.usatoday.com/" + "'", str33, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher34 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher34.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertTrue("'" + letterPublisher44 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher44.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 'a');
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.User user14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = newsletter12.isSubscribed(user14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher25, 32.0d);
        java.lang.String str31 = newsletter30.getUrl();
        objects.User user32 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter30.unsubscribe(user32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        java.lang.String str28 = newsletter15.getUrl();
        objects.User user29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = newsletter15.isSubscribed(user29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "https://www.usatoday.com/" + "'", str28, "https://www.usatoday.com/");
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 'a');
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter12.subscribe(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        newsletter8.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter13.getName();
        java.lang.String str16 = newsletter13.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher17 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter13.setName(letterPublisher17);
        newsletter8.setName(letterPublisher17);
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher17, (double) (byte) -1);
        newsletter2.setName(letterPublisher17);
        objects.User user23 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "https://www.usatoday.com/" + "'", str16, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        newsletter2.displayNews();
        double double30 = newsletter2.getCost();
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        java.lang.String str9 = newsletter2.getUrl();
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        java.lang.Class<?> wildcardClass36 = letterPublisher32.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher17, (double) (-1.0f));
        objects.User user21 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter20.unsubscribe(user21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        java.lang.String str24 = newsletter2.getUrl();
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.usatoday.com/" + "'", str24, "https://www.usatoday.com/");
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        newsletter10.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher13 = null;
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.String str18 = newsletter15.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter15.setName(letterPublisher19);
        newsletter10.setName(letterPublisher19);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher19, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        newsletter26.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter31.getName();
        java.lang.String str34 = newsletter31.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher35 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter31.setName(letterPublisher35);
        newsletter26.setName(letterPublisher35);
        objects.Newsletter.LetterPublisher letterPublisher38 = null;
        objects.Newsletter newsletter40 = new objects.Newsletter(letterPublisher38, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter40.getName();
        objects.Newsletter.LetterPublisher letterPublisher42 = newsletter40.getName();
        newsletter40.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher45 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter40.setName(letterPublisher45);
        newsletter26.setName(letterPublisher45);
        newsletter23.setName(letterPublisher45);
        newsletter2.setName(letterPublisher45);
        objects.User user50 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "https://www.usatoday.com/" + "'", str34, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher35 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher35.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertNull(letterPublisher42);
        org.junit.Assert.assertTrue("'" + letterPublisher45 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher45.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher9 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter8.setName(letterPublisher9);
        newsletter2.setName(letterPublisher9);
        objects.User user12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = newsletter2.isSubscribed(user12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher9 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher9.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        newsletter2.displayNews();
        newsletter2.setCost((int) (byte) 10);
        objects.User user27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = newsletter2.isSubscribed(user27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        double double17 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher19);
        java.lang.Class<?> wildcardClass21 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        newsletter2.displayNews();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (-1.0d));
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter12.accept(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass11 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher8);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.Class<?> wildcardClass9 = newsletter2.getClass();
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        java.lang.String str9 = newsletter2.getUrl();
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher15 = null;
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher15, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter17.getName();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter17.getName();
        java.lang.String str20 = newsletter17.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter17.setName(letterPublisher21);
        newsletter12.setName(letterPublisher21);
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter26.getName();
        newsletter26.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter26.setName(letterPublisher31);
        newsletter12.setName(letterPublisher31);
        newsletter8.setName(letterPublisher31);
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher31, 32.0d);
        newsletter2.setName(letterPublisher31);
        newsletter2.setCost((int) '#');
        newsletter2.setCost((int) (byte) 0);
        objects.User user42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = newsletter2.isSubscribed(user42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "https://www.usatoday.com/" + "'", str20, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = letterPublisher3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        java.lang.String str6 = newsletter2.getUrl();
        java.lang.Class<?> wildcardClass7 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 10);
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher3);
        newsletter2.setCost(1);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter2.getName();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher3 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher3.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        newsletter2.setCost((int) (short) 100);
        double double5 = newsletter2.getCost();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = newsletter2.isSubscribed(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass4 = newsletter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        double double7 = newsletter2.getCost();
        java.lang.String str8 = newsletter2.getUrl();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = newsletter2.isSubscribed(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "https://www.usatoday.com/" + "'", str8, "https://www.usatoday.com/");
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        double double17 = newsletter2.getCost();
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        newsletter15.setCost((int) (byte) 100);
        newsletter15.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter15.getName();
        java.lang.Class<?> wildcardClass20 = newsletter15.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher3);
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) 10);
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter7.unsubscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher3 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher3.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher5 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher5.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = null;
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter19.getName();
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter19.getName();
        newsletter19.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher24 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter19.setName(letterPublisher24);
        newsletter5.setName(letterPublisher24);
        newsletter2.setName(letterPublisher24);
        objects.User user28 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertTrue("'" + letterPublisher24 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher24.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        newsletter15.setCost((int) (byte) 100);
        newsletter15.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter15.getName();
        double double20 = newsletter15.getCost();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = newsletter16.isSubscribed(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        newsletter2.displayNews();
        java.lang.String str30 = newsletter2.getUrl();
        newsletter2.setCost((int) (byte) -1);
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 'a');
        java.lang.Class<?> wildcardClass13 = letterPublisher10.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        double double7 = newsletter2.getCost();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.WASHINGTONPOST;
        newsletter2.setName(letterPublisher6);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) 1.0f);
        newsletter11.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter11.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.User user41 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        newsletter15.setCost((int) (short) 100);
        java.lang.Class<?> wildcardClass31 = newsletter15.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        double double24 = newsletter2.getCost();
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = newsletter2.isSubscribed(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 32.0d + "'", double24 == 32.0d);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher37, (double) 0.0f);
        java.lang.Class<?> wildcardClass43 = letterPublisher37.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 100L);
        newsletter2.displayNews();
        java.lang.String str4 = newsletter2.getUrl();
        double double5 = newsletter2.getCost();
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "https://www.nytimes.com/" + "'", str4, "https://www.nytimes.com/");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        double double5 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 32.0d + "'", double5 == 32.0d);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (-1L));
        newsletter2.setCost(0);
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = newsletter2.isSubscribed(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        double double19 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user21 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, 100.0d);
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher6, 97.0d);
        objects.User user12 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter11.accept(user12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 100L);
        newsletter2.displayNews();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass9 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 0);
        objects.User user32 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.User user26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = newsletter15.isSubscribed(user26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        java.lang.String str26 = newsletter15.getUrl();
        objects.User user27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = newsletter15.isSubscribed(user27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        java.lang.Class<?> wildcardClass14 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = newsletter2.isSubscribed(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher17, (double) (-1.0f));
        newsletter20.setCost((int) (short) -1);
        objects.User user23 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter20.unsubscribe(user23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        double double9 = newsletter2.getCost();
        newsletter2.setCost((int) (short) 1);
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        newsletter14.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.WASHINGTONPOST;
        newsletter14.setName(letterPublisher18);
        newsletter14.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) 1.0f);
        newsletter23.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher26 = null;
        objects.Newsletter newsletter28 = new objects.Newsletter(letterPublisher26, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter28.getName();
        objects.Newsletter.LetterPublisher letterPublisher30 = newsletter28.getName();
        newsletter28.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher33 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter28.setName(letterPublisher33);
        newsletter23.setName(letterPublisher33);
        newsletter14.setName(letterPublisher33);
        objects.Newsletter newsletter38 = new objects.Newsletter(letterPublisher33, (-1.0d));
        newsletter2.setName(letterPublisher33);
        objects.User user40 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertNull(letterPublisher30);
        org.junit.Assert.assertTrue("'" + letterPublisher33 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher33.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        java.lang.String str36 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher37 = null;
        objects.Newsletter newsletter39 = new objects.Newsletter(letterPublisher37, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher40 = null;
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher40, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher43 = newsletter42.getName();
        objects.Newsletter.LetterPublisher letterPublisher44 = newsletter42.getName();
        newsletter42.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher47 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter42.setName(letterPublisher47);
        java.lang.String str49 = newsletter42.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher50 = newsletter42.getName();
        objects.Newsletter newsletter52 = new objects.Newsletter(letterPublisher50, (double) ' ');
        newsletter39.setName(letterPublisher50);
        newsletter2.setName(letterPublisher50);
        java.lang.Class<?> wildcardClass55 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "https://www.usatoday.com/" + "'", str36, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher43);
        org.junit.Assert.assertNull(letterPublisher44);
        org.junit.Assert.assertTrue("'" + letterPublisher47 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher47.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "https://www.usatoday.com/" + "'", str49, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher50 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher50.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        newsletter16.displayNews();
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = newsletter16.isSubscribed(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        double double6 = newsletter2.getCost();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter2.getName();
        newsletter2.setCost((int) (byte) 1);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher7);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        newsletter13.setCost((int) ' ');
        double double17 = newsletter13.getCost();
        double double18 = newsletter13.getCost();
        newsletter13.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher31, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher36 = null;
        objects.Newsletter newsletter38 = new objects.Newsletter(letterPublisher36, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher39 = newsletter38.getName();
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter38.getName();
        newsletter38.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher43 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter38.setName(letterPublisher43);
        newsletter35.setName(letterPublisher43);
        newsletter13.setName(letterPublisher43);
        newsletter2.setName(letterPublisher43);
        objects.Newsletter.LetterPublisher letterPublisher48 = null;
        objects.Newsletter newsletter50 = new objects.Newsletter(letterPublisher48, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter50.getName();
        newsletter50.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher53 = null;
        objects.Newsletter newsletter55 = new objects.Newsletter(letterPublisher53, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher56 = newsletter55.getName();
        objects.Newsletter.LetterPublisher letterPublisher57 = newsletter55.getName();
        java.lang.String str58 = newsletter55.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher59 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter55.setName(letterPublisher59);
        newsletter50.setName(letterPublisher59);
        newsletter2.setName(letterPublisher59);
        objects.User user63 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher39);
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertTrue("'" + letterPublisher43 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher43.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertNull(letterPublisher56);
        org.junit.Assert.assertNull(letterPublisher57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "https://www.usatoday.com/" + "'", str58, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher59 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher59.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        java.lang.Class<?> wildcardClass8 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        double double17 = newsletter2.getCost();
        newsletter2.displayNews();
        double double19 = newsletter2.getCost();
        newsletter2.setCost(1);
        java.lang.Class<?> wildcardClass22 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher15 = null;
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher15, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter17.getName();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter17.getName();
        java.lang.String str20 = newsletter17.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter17.setName(letterPublisher21);
        newsletter12.setName(letterPublisher21);
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter26.getName();
        newsletter26.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter26.setName(letterPublisher31);
        newsletter12.setName(letterPublisher31);
        newsletter8.setName(letterPublisher31);
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher31, 32.0d);
        newsletter2.setName(letterPublisher31);
        newsletter2.setCost((int) '#');
        newsletter2.setCost((int) (byte) 0);
        objects.Newsletter.LetterPublisher letterPublisher42 = null;
        objects.Newsletter newsletter44 = new objects.Newsletter(letterPublisher42, (double) 1.0f);
        newsletter44.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher47 = null;
        objects.Newsletter newsletter49 = new objects.Newsletter(letterPublisher47, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher50 = newsletter49.getName();
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter49.getName();
        newsletter49.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher54 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter49.setName(letterPublisher54);
        newsletter44.setName(letterPublisher54);
        objects.Newsletter newsletter58 = new objects.Newsletter(letterPublisher54, 0.0d);
        newsletter2.setName(letterPublisher54);
        objects.User user60 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "https://www.usatoday.com/" + "'", str20, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher50);
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertTrue("'" + letterPublisher54 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher54.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        newsletter36.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher41 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter36.setName(letterPublisher41);
        newsletter22.setName(letterPublisher41);
        newsletter18.setName(letterPublisher41);
        objects.Newsletter newsletter46 = new objects.Newsletter(letterPublisher41, 32.0d);
        newsletter12.setName(letterPublisher41);
        newsletter2.setName(letterPublisher41);
        double double49 = newsletter2.getCost();
        java.lang.Class<?> wildcardClass50 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertTrue("'" + letterPublisher41 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher41.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        objects.Newsletter newsletter37 = new objects.Newsletter(letterPublisher32, 0.0d);
        java.lang.String str38 = newsletter37.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher39 = newsletter37.getName();
        java.lang.Class<?> wildcardClass40 = newsletter37.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "https://www.usatoday.com/" + "'", str38, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher39 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher39.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) 0);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        java.lang.String str25 = newsletter18.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter18.getName();
        objects.Newsletter newsletter28 = new objects.Newsletter(letterPublisher26, (double) 'a');
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher26, 10.0d);
        newsletter15.setName(letterPublisher26);
        newsletter15.displayNews();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "https://www.usatoday.com/" + "'", str25, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 'a');
        java.lang.Class<?> wildcardClass13 = newsletter12.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) 0);
        newsletter15.setCost(1);
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = newsletter15.isSubscribed(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        newsletter2.displayNews();
        newsletter2.setCost(1);
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher37, (double) 'a');
        double double43 = newsletter42.getCost();
        objects.User user44 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter42.unsubscribe(user44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 97.0d + "'", double43 == 97.0d);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        double double7 = newsletter2.getCost();
        java.lang.String str8 = newsletter2.getUrl();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "https://www.usatoday.com/" + "'", str8, "https://www.usatoday.com/");
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        double double5 = newsletter2.getCost();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 32.0d + "'", double5 == 32.0d);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        double double10 = newsletter2.getCost();
        newsletter2.setCost((int) (byte) 0);
        double double13 = newsletter2.getCost();
        objects.User user14 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        double double4 = newsletter2.getCost();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher17, (double) (-1.0f));
        java.lang.Class<?> wildcardClass21 = newsletter20.getClass();
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher25, 32.0d);
        java.lang.String str31 = newsletter30.getUrl();
        newsletter30.setCost((int) (short) -1);
        java.lang.String str34 = newsletter30.getUrl();
        objects.User user35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = newsletter30.isSubscribed(user35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "https://www.usatoday.com/" + "'", str34, "https://www.usatoday.com/");
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher25, 32.0d);
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = newsletter30.isSubscribed(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass4 = newsletter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter13.getName();
        newsletter13.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter13.setName(letterPublisher18);
        java.lang.String str20 = newsletter13.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter13.getName();
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) ' ');
        newsletter10.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.User user26 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "https://www.usatoday.com/" + "'", str20, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher37, (double) 0.0f);
        objects.User user43 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter42.unsubscribe(user43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        double double7 = newsletter2.getCost();
        double double8 = newsletter2.getCost();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        objects.User user29 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = newsletter2.isSubscribed(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (short) -1);
        double double16 = newsletter15.getCost();
        objects.Newsletter.LetterPublisher letterPublisher17 = null;
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter19.getName();
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter19.getName();
        java.lang.String str22 = newsletter19.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter19.setName(letterPublisher23);
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher23, (double) 0L);
        objects.Newsletter newsletter28 = new objects.Newsletter(letterPublisher23, 1.0d);
        newsletter15.setName(letterPublisher23);
        objects.User user30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = newsletter15.isSubscribed(user30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "https://www.usatoday.com/" + "'", str22, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        java.lang.String str8 = newsletter2.getUrl();
        java.lang.Class<?> wildcardClass9 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "https://www.usatoday.com/" + "'", str8, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        newsletter15.setCost((int) (short) 100);
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = newsletter2.isSubscribed(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher25, 32.0d);
        java.lang.String str31 = newsletter30.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        objects.Newsletter newsletter34 = new objects.Newsletter(letterPublisher32, (double) (short) 0);
        objects.User user35 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter34.subscribe(user35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (-1.0d));
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = newsletter2.isSubscribed(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) -1);
        java.lang.String str10 = newsletter2.getUrl();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = newsletter2.isSubscribed(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        newsletter15.setCost(100);
        double double18 = newsletter15.getCost();
        objects.User user19 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        newsletter15.setCost((int) (byte) 100);
        newsletter15.displayNews();
        java.lang.String str19 = newsletter15.getUrl();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.nytimes.com/" + "'", str19, "https://www.nytimes.com/");
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        newsletter36.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher41 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter36.setName(letterPublisher41);
        newsletter22.setName(letterPublisher41);
        newsletter18.setName(letterPublisher41);
        objects.Newsletter newsletter46 = new objects.Newsletter(letterPublisher41, 32.0d);
        newsletter12.setName(letterPublisher41);
        newsletter2.setName(letterPublisher41);
        double double49 = newsletter2.getCost();
        objects.User user50 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertTrue("'" + letterPublisher41 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher41.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        newsletter36.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher41 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter36.setName(letterPublisher41);
        newsletter22.setName(letterPublisher41);
        newsletter18.setName(letterPublisher41);
        objects.Newsletter newsletter46 = new objects.Newsletter(letterPublisher41, 32.0d);
        newsletter12.setName(letterPublisher41);
        newsletter2.setName(letterPublisher41);
        objects.User user49 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertTrue("'" + letterPublisher41 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher41.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter8.getName();
        newsletter8.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher13 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter8.setName(letterPublisher13);
        java.lang.String str15 = newsletter8.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter8.getName();
        newsletter2.setName(letterPublisher16);
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter2.getName();
        objects.User user19 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = newsletter2.isSubscribed(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        java.lang.String str24 = newsletter2.getUrl();
        objects.User user25 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.nytimes.com/" + "'", str24, "https://www.nytimes.com/");
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, 100.0d);
        double double10 = newsletter9.getCost();
        java.lang.Class<?> wildcardClass11 = newsletter9.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.setCost((int) 'a');
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        newsletter8.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter13.getName();
        java.lang.String str16 = newsletter13.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher17 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter13.setName(letterPublisher17);
        newsletter8.setName(letterPublisher17);
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher17, (double) (short) -1);
        newsletter2.setName(letterPublisher17);
        objects.User user23 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "https://www.usatoday.com/" + "'", str16, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        objects.User user29 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        java.lang.String str6 = newsletter2.getUrl();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.displayNews();
        double double9 = newsletter2.getCost();
        newsletter2.displayNews();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 32.0d + "'", double9 == 32.0d);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = null;
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter19.getName();
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter19.getName();
        newsletter19.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher24 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter19.setName(letterPublisher24);
        newsletter5.setName(letterPublisher24);
        newsletter2.setName(letterPublisher24);
        objects.User user28 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertTrue("'" + letterPublisher24 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher24.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 1L);
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = newsletter12.isSubscribed(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        newsletter36.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher41 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter36.setName(letterPublisher41);
        newsletter22.setName(letterPublisher41);
        newsletter18.setName(letterPublisher41);
        objects.Newsletter newsletter46 = new objects.Newsletter(letterPublisher41, 32.0d);
        newsletter12.setName(letterPublisher41);
        newsletter2.setName(letterPublisher41);
        double double49 = newsletter2.getCost();
        java.lang.String str50 = newsletter2.getUrl();
        objects.User user51 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertTrue("'" + letterPublisher41 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher41.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "https://www.usatoday.com/" + "'", str50, "https://www.usatoday.com/");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        java.lang.String str28 = newsletter15.getUrl();
        objects.User user29 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "https://www.usatoday.com/" + "'", str28, "https://www.usatoday.com/");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 10);
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher18, (double) 1);
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher18, (double) 10.0f);
        objects.User user28 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter27.unsubscribe(user28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 10);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.unsubscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        double double17 = newsletter2.getCost();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        newsletter10.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher13 = null;
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.String str18 = newsletter15.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter15.setName(letterPublisher19);
        newsletter10.setName(letterPublisher19);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher19, 10.0d);
        newsletter2.setName(letterPublisher19);
        java.lang.String str25 = newsletter2.getUrl();
        newsletter2.displayNews();
        objects.User user27 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "https://www.nytimes.com/" + "'", str25, "https://www.nytimes.com/");
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher21, (double) ' ');
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher21, (double) 'a');
        objects.User user28 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter27.accept(user28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher14, (double) 1.0f);
        java.lang.Class<?> wildcardClass19 = newsletter18.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        double double6 = newsletter2.getCost();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter2.getName();
        newsletter2.setCost((int) (byte) 1);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher7);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.unsubscribe(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, 100.0d);
        java.lang.Class<?> wildcardClass10 = newsletter9.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher9 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter8.setName(letterPublisher9);
        newsletter2.setName(letterPublisher9);
        objects.User user12 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher9 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher9.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) 100.0f);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.unsubscribe(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        double double7 = newsletter2.getCost();
        double double8 = newsletter2.getCost();
        java.lang.String str9 = newsletter2.getUrl();
        java.lang.Class<?> wildcardClass10 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.WASHINGTONPOST;
        newsletter2.setName(letterPublisher6);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) 1.0f);
        newsletter11.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter11.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        java.lang.Class<?> wildcardClass25 = letterPublisher21.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.WASHINGTONPOST;
        newsletter2.setName(letterPublisher6);
        java.lang.String str8 = newsletter2.getUrl();
        double double9 = newsletter2.getCost();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.User user11 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "https://www.washingtonpost.com/" + "'", str8, "https://www.washingtonpost.com/");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = newsletter2.isSubscribed(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        java.lang.Class<?> wildcardClass29 = letterPublisher25.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        double double10 = newsletter2.getCost();
        newsletter2.setCost((int) (byte) 0);
        objects.Newsletter.LetterPublisher letterPublisher13 = null;
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        newsletter15.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        java.lang.String str23 = newsletter20.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher24 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter20.setName(letterPublisher24);
        newsletter15.setName(letterPublisher24);
        objects.Newsletter newsletter28 = new objects.Newsletter(letterPublisher24, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        newsletter31.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        java.lang.String str39 = newsletter36.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher40 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter36.setName(letterPublisher40);
        newsletter31.setName(letterPublisher40);
        objects.Newsletter.LetterPublisher letterPublisher43 = null;
        objects.Newsletter newsletter45 = new objects.Newsletter(letterPublisher43, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher46 = newsletter45.getName();
        objects.Newsletter.LetterPublisher letterPublisher47 = newsletter45.getName();
        newsletter45.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher50 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter45.setName(letterPublisher50);
        newsletter31.setName(letterPublisher50);
        newsletter28.setName(letterPublisher50);
        objects.Newsletter newsletter55 = new objects.Newsletter(letterPublisher50, (double) 0.0f);
        newsletter2.setName(letterPublisher50);
        objects.Newsletter newsletter58 = new objects.Newsletter(letterPublisher50, 1.0d);
        objects.User user59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = newsletter58.isSubscribed(user59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "https://www.usatoday.com/" + "'", str23, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher24 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher24.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "https://www.usatoday.com/" + "'", str39, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher46);
        org.junit.Assert.assertNull(letterPublisher47);
        org.junit.Assert.assertTrue("'" + letterPublisher50 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher50.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        newsletter2.displayNews();
        newsletter2.setCost((int) (byte) 10);
        objects.User user27 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.setCost((int) 'a');
        newsletter2.setCost(0);
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = newsletter2.isSubscribed(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 0L);
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher6, 1.0d);
        java.lang.Class<?> wildcardClass12 = newsletter11.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        double double7 = newsletter2.getCost();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = newsletter2.isSubscribed(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher12, (double) 'a');
        java.lang.Class<?> wildcardClass19 = newsletter18.getClass();
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        double double4 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = newsletter2.isSubscribed(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        java.lang.String str3 = newsletter2.getUrl();
        java.lang.String str4 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher5 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher5);
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "https://www.usatoday.com/" + "'", str3, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "https://www.usatoday.com/" + "'", str4, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher5 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher5.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher17, 97.0d);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher17, (double) 1L);
        java.lang.String str23 = newsletter22.getUrl();
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = newsletter22.isSubscribed(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "https://www.nytimes.com/" + "'", str23, "https://www.nytimes.com/");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        double double7 = newsletter2.getCost();
        newsletter2.setCost((-1));
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, 32.0d);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        double double7 = newsletter2.getCost();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = newsletter2.isSubscribed(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        newsletter2.displayNews();
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher21, (double) ' ');
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher21, (double) 'a');
        objects.Newsletter newsletter29 = new objects.Newsletter(letterPublisher21, (double) (short) 1);
        objects.User user30 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter29.unsubscribe(user30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 100L);
        newsletter2.displayNews();
        java.lang.String str4 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        newsletter7.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter12.getName();
        java.lang.String str15 = newsletter12.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher16 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter12.setName(letterPublisher16);
        newsletter7.setName(letterPublisher16);
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher16, 10.0d);
        newsletter2.setName(letterPublisher16);
        double double22 = newsletter2.getCost();
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "https://www.nytimes.com/" + "'", str4, "https://www.nytimes.com/");
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        newsletter2.displayNews();
        java.lang.String str30 = newsletter2.getUrl();
        java.lang.String str31 = newsletter2.getUrl();
        objects.User user32 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        double double19 = newsletter2.getCost();
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 100L);
        double double3 = newsletter2.getCost();
        java.lang.Class<?> wildcardClass4 = newsletter2.getClass();
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = newsletter2.isSubscribed(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        double double8 = newsletter2.getCost();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (short) -1);
        double double16 = newsletter15.getCost();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.Class<?> wildcardClass18 = newsletter15.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher3);
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher3, 97.0d);
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter6.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher3 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher3.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher12, (double) 'a');
        newsletter18.displayNews();
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = newsletter18.isSubscribed(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        double double9 = newsletter2.getCost();
        newsletter2.setCost((int) (short) 1);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter2.getName();
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher13);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        double double7 = newsletter2.getCost();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher8);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        newsletter13.setCost((int) ' ');
        double double17 = newsletter13.getCost();
        double double18 = newsletter13.getCost();
        newsletter13.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher31, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher36 = null;
        objects.Newsletter newsletter38 = new objects.Newsletter(letterPublisher36, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher39 = newsletter38.getName();
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter38.getName();
        newsletter38.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher43 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter38.setName(letterPublisher43);
        newsletter35.setName(letterPublisher43);
        newsletter13.setName(letterPublisher43);
        newsletter2.setName(letterPublisher43);
        objects.Newsletter.LetterPublisher letterPublisher48 = null;
        objects.Newsletter newsletter50 = new objects.Newsletter(letterPublisher48, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter50.getName();
        newsletter50.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher53 = null;
        objects.Newsletter newsletter55 = new objects.Newsletter(letterPublisher53, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher56 = newsletter55.getName();
        objects.Newsletter.LetterPublisher letterPublisher57 = newsletter55.getName();
        java.lang.String str58 = newsletter55.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher59 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter55.setName(letterPublisher59);
        newsletter50.setName(letterPublisher59);
        newsletter2.setName(letterPublisher59);
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass64 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher39);
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertTrue("'" + letterPublisher43 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher43.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertNull(letterPublisher56);
        org.junit.Assert.assertNull(letterPublisher57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "https://www.usatoday.com/" + "'", str58, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher59 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher59.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher37, (double) 'a');
        objects.Newsletter newsletter44 = new objects.Newsletter(letterPublisher37, (double) 0.0f);
        objects.User user45 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter44.subscribe(user45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 'a');
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.User user14 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter12.unsubscribe(user14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        java.lang.String str8 = newsletter2.getUrl();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "https://www.usatoday.com/" + "'", str8, "https://www.usatoday.com/");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 0);
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter13.getName();
        newsletter13.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter13.setName(letterPublisher18);
        java.lang.String str20 = newsletter13.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter13.getName();
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) ' ');
        newsletter10.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.User user26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = newsletter2.isSubscribed(user26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "https://www.usatoday.com/" + "'", str20, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        double double7 = newsletter2.getCost();
        double double8 = newsletter2.getCost();
        newsletter2.setCost((int) '4');
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher4);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        java.lang.String str15 = newsletter2.getUrl();
        double double16 = newsletter2.getCost();
        objects.User user17 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 32.0d + "'", double16 == 32.0d);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter15.getName();
        newsletter15.displayNews();
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.unsubscribe(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + letterPublisher29 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher29.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, 32.0d);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = newsletter2.isSubscribed(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.User user16 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.unsubscribe(user16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher25, 32.0d);
        java.lang.String str31 = newsletter30.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        objects.Newsletter newsletter34 = new objects.Newsletter(letterPublisher32, (double) (short) 0);
        java.lang.Class<?> wildcardClass35 = letterPublisher32.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 100L);
        newsletter2.displayNews();
        java.lang.String str4 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        newsletter7.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter12.getName();
        java.lang.String str15 = newsletter12.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher16 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter12.setName(letterPublisher16);
        newsletter7.setName(letterPublisher16);
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher16, 10.0d);
        newsletter2.setName(letterPublisher16);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher16, (double) 100);
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter23.subscribe(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "https://www.nytimes.com/" + "'", str4, "https://www.nytimes.com/");
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 0);
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = newsletter2.isSubscribed(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        java.lang.String str4 = newsletter2.getUrl();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "https://www.usatoday.com/" + "'", str4, "https://www.usatoday.com/");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        java.lang.String str17 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        java.lang.String str27 = newsletter20.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        newsletter31.setCost((int) ' ');
        double double35 = newsletter31.getCost();
        double double36 = newsletter31.getCost();
        newsletter31.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher38 = null;
        objects.Newsletter newsletter40 = new objects.Newsletter(letterPublisher38, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter40.getName();
        newsletter40.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher43 = null;
        objects.Newsletter newsletter45 = new objects.Newsletter(letterPublisher43, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher46 = newsletter45.getName();
        objects.Newsletter.LetterPublisher letterPublisher47 = newsletter45.getName();
        java.lang.String str48 = newsletter45.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher49 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter45.setName(letterPublisher49);
        newsletter40.setName(letterPublisher49);
        objects.Newsletter newsletter53 = new objects.Newsletter(letterPublisher49, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher54 = null;
        objects.Newsletter newsletter56 = new objects.Newsletter(letterPublisher54, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher57 = newsletter56.getName();
        objects.Newsletter.LetterPublisher letterPublisher58 = newsletter56.getName();
        newsletter56.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher61 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter56.setName(letterPublisher61);
        newsletter53.setName(letterPublisher61);
        newsletter31.setName(letterPublisher61);
        newsletter20.setName(letterPublisher61);
        newsletter16.setName(letterPublisher61);
        objects.User user67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = newsletter16.isSubscribed(user67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.usatoday.com/" + "'", str27, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher28 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher28.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 32.0d + "'", double35 == 32.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 32.0d + "'", double36 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertNull(letterPublisher46);
        org.junit.Assert.assertNull(letterPublisher47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "https://www.usatoday.com/" + "'", str48, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher49 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher49.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher57);
        org.junit.Assert.assertNull(letterPublisher58);
        org.junit.Assert.assertTrue("'" + letterPublisher61 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher61.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        double double6 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        double double17 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user19 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.setCost((int) (short) 100);
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) 1.0f);
        newsletter11.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter11.getName();
        newsletter11.displayNews();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher17 = null;
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter19.getName();
        newsletter19.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher22 = null;
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher22, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter24.getName();
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter24.getName();
        java.lang.String str27 = newsletter24.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher28 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter24.setName(letterPublisher28);
        newsletter19.setName(letterPublisher28);
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher28, 10.0d);
        newsletter11.setName(letterPublisher28);
        newsletter2.setName(letterPublisher28);
        objects.User user35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = newsletter2.isSubscribed(user35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertNull(letterPublisher26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.usatoday.com/" + "'", str27, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher28 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher28.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        objects.User user8 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        newsletter2.displayNews();
        newsletter2.setCost((int) (byte) 10);
        java.lang.String str27 = newsletter2.getUrl();
        objects.User user28 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.nytimes.com/" + "'", str27, "https://www.nytimes.com/");
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        newsletter16.setCost((int) ' ');
        double double20 = newsletter16.getCost();
        newsletter16.setCost((int) '#');
        newsletter16.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        double double28 = newsletter26.getCost();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        objects.Newsletter.LetterPublisher letterPublisher33 = null;
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher33, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher36 = newsletter35.getName();
        newsletter35.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher38 = null;
        objects.Newsletter newsletter40 = new objects.Newsletter(letterPublisher38, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter40.getName();
        objects.Newsletter.LetterPublisher letterPublisher42 = newsletter40.getName();
        java.lang.String str43 = newsletter40.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher44 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter40.setName(letterPublisher44);
        newsletter35.setName(letterPublisher44);
        objects.Newsletter.LetterPublisher letterPublisher47 = null;
        objects.Newsletter newsletter49 = new objects.Newsletter(letterPublisher47, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher50 = newsletter49.getName();
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter49.getName();
        newsletter49.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher54 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter49.setName(letterPublisher54);
        newsletter35.setName(letterPublisher54);
        newsletter31.setName(letterPublisher54);
        newsletter26.setName(letterPublisher54);
        newsletter16.setName(letterPublisher54);
        newsletter2.setName(letterPublisher54);
        objects.Newsletter newsletter62 = new objects.Newsletter(letterPublisher54, (double) (short) 1);
        double double63 = newsletter62.getCost();
        java.lang.String str64 = newsletter62.getUrl();
        java.lang.Class<?> wildcardClass65 = newsletter62.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher36);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertNull(letterPublisher42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "https://www.usatoday.com/" + "'", str43, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher44 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher44.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher50);
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertTrue("'" + letterPublisher54 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher54.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "https://www.usatoday.com/" + "'", str64, "https://www.usatoday.com/");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        java.lang.String str29 = newsletter2.getUrl();
        double double30 = newsletter2.getCost();
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "https://www.usatoday.com/" + "'", str29, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        double double5 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher37, (double) 'a');
        objects.Newsletter newsletter44 = new objects.Newsletter(letterPublisher37, (double) 0.0f);
        objects.User user45 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter44.unsubscribe(user45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        newsletter16.setCost((int) ' ');
        double double20 = newsletter16.getCost();
        newsletter16.setCost((int) '#');
        newsletter16.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        double double28 = newsletter26.getCost();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        objects.Newsletter.LetterPublisher letterPublisher33 = null;
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher33, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher36 = newsletter35.getName();
        newsletter35.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher38 = null;
        objects.Newsletter newsletter40 = new objects.Newsletter(letterPublisher38, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter40.getName();
        objects.Newsletter.LetterPublisher letterPublisher42 = newsletter40.getName();
        java.lang.String str43 = newsletter40.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher44 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter40.setName(letterPublisher44);
        newsletter35.setName(letterPublisher44);
        objects.Newsletter.LetterPublisher letterPublisher47 = null;
        objects.Newsletter newsletter49 = new objects.Newsletter(letterPublisher47, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher50 = newsletter49.getName();
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter49.getName();
        newsletter49.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher54 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter49.setName(letterPublisher54);
        newsletter35.setName(letterPublisher54);
        newsletter31.setName(letterPublisher54);
        newsletter26.setName(letterPublisher54);
        newsletter16.setName(letterPublisher54);
        newsletter2.setName(letterPublisher54);
        objects.Newsletter newsletter62 = new objects.Newsletter(letterPublisher54, (double) (short) 1);
        objects.Newsletter newsletter64 = new objects.Newsletter(letterPublisher54, (double) 100.0f);
        objects.User user65 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter64.unsubscribe(user65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher36);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertNull(letterPublisher42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "https://www.usatoday.com/" + "'", str43, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher44 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher44.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher50);
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertTrue("'" + letterPublisher54 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher54.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 100);
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher6, 0.0d);
        objects.User user12 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter11.subscribe(user12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        java.lang.String str24 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        java.lang.String str34 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher35 = newsletter27.getName();
        objects.Newsletter newsletter37 = new objects.Newsletter(letterPublisher35, (double) ' ');
        newsletter2.setName(letterPublisher35);
        objects.User user39 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.usatoday.com/" + "'", str24, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "https://www.usatoday.com/" + "'", str34, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher35 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher35.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        newsletter2.setCost((int) (byte) 0);
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher6);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        newsletter16.setCost((int) ' ');
        double double20 = newsletter16.getCost();
        newsletter16.setCost((int) '#');
        newsletter16.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        double double28 = newsletter26.getCost();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        objects.Newsletter.LetterPublisher letterPublisher33 = null;
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher33, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher36 = newsletter35.getName();
        newsletter35.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher38 = null;
        objects.Newsletter newsletter40 = new objects.Newsletter(letterPublisher38, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter40.getName();
        objects.Newsletter.LetterPublisher letterPublisher42 = newsletter40.getName();
        java.lang.String str43 = newsletter40.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher44 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter40.setName(letterPublisher44);
        newsletter35.setName(letterPublisher44);
        objects.Newsletter.LetterPublisher letterPublisher47 = null;
        objects.Newsletter newsletter49 = new objects.Newsletter(letterPublisher47, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher50 = newsletter49.getName();
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter49.getName();
        newsletter49.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher54 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter49.setName(letterPublisher54);
        newsletter35.setName(letterPublisher54);
        newsletter31.setName(letterPublisher54);
        newsletter26.setName(letterPublisher54);
        newsletter16.setName(letterPublisher54);
        newsletter2.setName(letterPublisher54);
        objects.Newsletter newsletter62 = new objects.Newsletter(letterPublisher54, (double) (short) 1);
        double double63 = newsletter62.getCost();
        java.lang.String str64 = newsletter62.getUrl();
        objects.User user65 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter62.unsubscribe(user65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher36);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertNull(letterPublisher42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "https://www.usatoday.com/" + "'", str43, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher44 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher44.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher50);
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertTrue("'" + letterPublisher54 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher54.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "https://www.usatoday.com/" + "'", str64, "https://www.usatoday.com/");
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        newsletter2.displayNews();
        newsletter2.setCost((int) (byte) 10);
        double double27 = newsletter2.getCost();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        newsletter31.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        java.lang.String str39 = newsletter36.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher40 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter36.setName(letterPublisher40);
        newsletter31.setName(letterPublisher40);
        objects.Newsletter newsletter44 = new objects.Newsletter(letterPublisher40, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher45 = null;
        objects.Newsletter newsletter47 = new objects.Newsletter(letterPublisher45, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher48 = newsletter47.getName();
        objects.Newsletter.LetterPublisher letterPublisher49 = newsletter47.getName();
        newsletter47.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher52 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter47.setName(letterPublisher52);
        newsletter44.setName(letterPublisher52);
        objects.Newsletter newsletter56 = new objects.Newsletter(letterPublisher52, (double) 'a');
        newsletter2.setName(letterPublisher52);
        objects.User user58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = newsletter2.isSubscribed(user58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + letterPublisher28 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher28.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "https://www.usatoday.com/" + "'", str39, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher48);
        org.junit.Assert.assertNull(letterPublisher49);
        org.junit.Assert.assertTrue("'" + letterPublisher52 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher52.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        java.lang.String str6 = newsletter2.getUrl();
        double double7 = newsletter2.getCost();
        java.lang.String str8 = newsletter2.getUrl();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "https://www.usatoday.com/" + "'", str6, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "https://www.usatoday.com/" + "'", str8, "https://www.usatoday.com/");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 0L);
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher6, 1.0d);
        objects.User user12 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter11.subscribe(user12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        java.lang.String str15 = newsletter2.getUrl();
        newsletter2.displayNews();
        java.lang.String str17 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        newsletter23.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher26 = null;
        objects.Newsletter newsletter28 = new objects.Newsletter(letterPublisher26, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter28.getName();
        objects.Newsletter.LetterPublisher letterPublisher30 = newsletter28.getName();
        java.lang.String str31 = newsletter28.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter28.setName(letterPublisher32);
        newsletter23.setName(letterPublisher32);
        objects.Newsletter.LetterPublisher letterPublisher35 = newsletter23.getName();
        newsletter20.setName(letterPublisher35);
        newsletter2.setName(letterPublisher35);
        objects.User user38 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = newsletter2.isSubscribed(user38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertNull(letterPublisher30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher35 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher35.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter18.getName();
        newsletter18.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter18.setName(letterPublisher23);
        newsletter15.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter15.setName(letterPublisher26);
        double double28 = newsletter15.getCost();
        newsletter15.displayNews();
        objects.User user30 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher26 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher26.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.setCost((int) ' ');
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        newsletter16.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher19 = null;
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter21.getName();
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter21.getName();
        java.lang.String str24 = newsletter21.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter21.setName(letterPublisher25);
        newsletter16.setName(letterPublisher25);
        objects.Newsletter newsletter29 = new objects.Newsletter(letterPublisher25, 10.0d);
        newsletter9.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        java.lang.String str32 = newsletter2.getUrl();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.usatoday.com/" + "'", str24, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "https://www.nytimes.com/" + "'", str32, "https://www.nytimes.com/");
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter2.getName();
        java.lang.Class<?> wildcardClass19 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        double double17 = newsletter2.getCost();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        newsletter13.setCost((int) ' ');
        double double17 = newsletter13.getCost();
        double double18 = newsletter13.getCost();
        newsletter13.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher31, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher36 = null;
        objects.Newsletter newsletter38 = new objects.Newsletter(letterPublisher36, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher39 = newsletter38.getName();
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter38.getName();
        newsletter38.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher43 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter38.setName(letterPublisher43);
        newsletter35.setName(letterPublisher43);
        newsletter13.setName(letterPublisher43);
        newsletter2.setName(letterPublisher43);
        objects.Newsletter.LetterPublisher letterPublisher48 = null;
        objects.Newsletter newsletter50 = new objects.Newsletter(letterPublisher48, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter50.getName();
        newsletter50.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher53 = null;
        objects.Newsletter newsletter55 = new objects.Newsletter(letterPublisher53, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher56 = newsletter55.getName();
        objects.Newsletter.LetterPublisher letterPublisher57 = newsletter55.getName();
        java.lang.String str58 = newsletter55.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher59 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter55.setName(letterPublisher59);
        newsletter50.setName(letterPublisher59);
        newsletter2.setName(letterPublisher59);
        newsletter2.displayNews();
        objects.User user64 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher39);
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertTrue("'" + letterPublisher43 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher43.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertNull(letterPublisher56);
        org.junit.Assert.assertNull(letterPublisher57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "https://www.usatoday.com/" + "'", str58, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher59 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher59.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        newsletter10.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher13 = null;
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.String str18 = newsletter15.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter15.setName(letterPublisher19);
        newsletter10.setName(letterPublisher19);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher19, 10.0d);
        newsletter2.setName(letterPublisher19);
        java.lang.String str25 = newsletter2.getUrl();
        newsletter2.displayNews();
        java.lang.String str27 = newsletter2.getUrl();
        newsletter2.setCost(100);
        objects.User user30 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "https://www.nytimes.com/" + "'", str25, "https://www.nytimes.com/");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.nytimes.com/" + "'", str27, "https://www.nytimes.com/");
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        newsletter2.setCost((int) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        objects.Newsletter.LetterPublisher letterPublisher20 = null;
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher20, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter22.getName();
        newsletter22.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        java.lang.String str30 = newsletter27.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher31 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter27.setName(letterPublisher31);
        newsletter22.setName(letterPublisher31);
        objects.Newsletter.LetterPublisher letterPublisher34 = null;
        objects.Newsletter newsletter36 = new objects.Newsletter(letterPublisher34, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter36.getName();
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter36.getName();
        newsletter36.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher41 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter36.setName(letterPublisher41);
        newsletter22.setName(letterPublisher41);
        newsletter18.setName(letterPublisher41);
        objects.Newsletter newsletter46 = new objects.Newsletter(letterPublisher41, 32.0d);
        newsletter12.setName(letterPublisher41);
        newsletter2.setName(letterPublisher41);
        double double49 = newsletter2.getCost();
        java.lang.String str50 = newsletter2.getUrl();
        double double51 = newsletter2.getCost();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher31 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher31.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertTrue("'" + letterPublisher41 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher41.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "https://www.usatoday.com/" + "'", str50, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher18, (double) ' ');
        objects.User user26 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter25.unsubscribe(user26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher18, (double) 1);
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher18, (double) 10.0f);
        java.lang.String str28 = newsletter27.getUrl();
        objects.User user29 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter27.unsubscribe(user29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "https://www.nytimes.com/" + "'", str28, "https://www.nytimes.com/");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 100L);
        newsletter2.displayNews();
        java.lang.String str4 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        newsletter7.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter12.getName();
        java.lang.String str15 = newsletter12.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher16 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter12.setName(letterPublisher16);
        newsletter7.setName(letterPublisher16);
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher16, 10.0d);
        newsletter2.setName(letterPublisher16);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher16, (double) 100);
        objects.User user24 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter23.unsubscribe(user24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "https://www.nytimes.com/" + "'", str4, "https://www.nytimes.com/");
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher12, (double) 'a');
        newsletter18.displayNews();
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter18.unsubscribe(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher37, (double) 'a');
        objects.Newsletter newsletter44 = new objects.Newsletter(letterPublisher37, (double) 0.0f);
        objects.Newsletter newsletter46 = new objects.Newsletter(letterPublisher37, 0.0d);
        objects.User user47 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter46.subscribe(user47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) 1.0f);
        newsletter11.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter11.setName(letterPublisher21);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher21, 0.0d);
        java.lang.String str26 = newsletter25.getUrl();
        double double27 = newsletter25.getCost();
        double double28 = newsletter25.getCost();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter25.getName();
        newsletter2.setName(letterPublisher29);
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + letterPublisher29 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher29.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        newsletter2.setCost((int) '#');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        double double14 = newsletter12.getCost();
        objects.Newsletter.LetterPublisher letterPublisher15 = null;
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher15, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter17.getName();
        objects.Newsletter.LetterPublisher letterPublisher19 = null;
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter21.getName();
        newsletter21.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter26.getName();
        java.lang.String str29 = newsletter26.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher30 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter26.setName(letterPublisher30);
        newsletter21.setName(letterPublisher30);
        objects.Newsletter.LetterPublisher letterPublisher33 = null;
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher33, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher36 = newsletter35.getName();
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter35.getName();
        newsletter35.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher40 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter35.setName(letterPublisher40);
        newsletter21.setName(letterPublisher40);
        newsletter17.setName(letterPublisher40);
        newsletter12.setName(letterPublisher40);
        newsletter2.setName(letterPublisher40);
        newsletter2.setCost((int) (byte) 100);
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "https://www.usatoday.com/" + "'", str29, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher30 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher30.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher36);
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, 10.0d);
        newsletter2.setName(letterPublisher18);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher18, 100.0d);
        objects.Newsletter.LetterPublisher letterPublisher26 = null;
        objects.Newsletter newsletter28 = new objects.Newsletter(letterPublisher26, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) 1.0f);
        newsletter31.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter31.getName();
        objects.Newsletter.LetterPublisher letterPublisher35 = newsletter31.getName();
        objects.Newsletter.LetterPublisher letterPublisher36 = null;
        objects.Newsletter newsletter38 = new objects.Newsletter(letterPublisher36, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher39 = newsletter38.getName();
        newsletter38.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher41 = null;
        objects.Newsletter newsletter43 = new objects.Newsletter(letterPublisher41, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher44 = newsletter43.getName();
        objects.Newsletter.LetterPublisher letterPublisher45 = newsletter43.getName();
        java.lang.String str46 = newsletter43.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher47 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter43.setName(letterPublisher47);
        newsletter38.setName(letterPublisher47);
        objects.Newsletter newsletter51 = new objects.Newsletter(letterPublisher47, (double) (short) -1);
        newsletter31.setName(letterPublisher47);
        newsletter28.setName(letterPublisher47);
        newsletter25.setName(letterPublisher47);
        java.lang.Class<?> wildcardClass55 = letterPublisher47.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertNull(letterPublisher35);
        org.junit.Assert.assertNull(letterPublisher39);
        org.junit.Assert.assertNull(letterPublisher44);
        org.junit.Assert.assertNull(letterPublisher45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "https://www.usatoday.com/" + "'", str46, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher47 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher47.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        newsletter2.setCost((int) '#');
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        double double14 = newsletter12.getCost();
        objects.Newsletter.LetterPublisher letterPublisher15 = null;
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher15, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter17.getName();
        objects.Newsletter.LetterPublisher letterPublisher19 = null;
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter21.getName();
        newsletter21.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter26.getName();
        java.lang.String str29 = newsletter26.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher30 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter26.setName(letterPublisher30);
        newsletter21.setName(letterPublisher30);
        objects.Newsletter.LetterPublisher letterPublisher33 = null;
        objects.Newsletter newsletter35 = new objects.Newsletter(letterPublisher33, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher36 = newsletter35.getName();
        objects.Newsletter.LetterPublisher letterPublisher37 = newsletter35.getName();
        newsletter35.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher40 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter35.setName(letterPublisher40);
        newsletter21.setName(letterPublisher40);
        newsletter17.setName(letterPublisher40);
        newsletter12.setName(letterPublisher40);
        newsletter2.setName(letterPublisher40);
        objects.User user46 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = newsletter2.isSubscribed(user46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "https://www.usatoday.com/" + "'", str29, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher30 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher30.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher36);
        org.junit.Assert.assertNull(letterPublisher37);
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        newsletter2.displayNews();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        newsletter15.setCost(100);
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.accept(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.User user3 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        newsletter11.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher16 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter11.setName(letterPublisher16);
        java.lang.String str18 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter11.getName();
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (-1.0d));
        newsletter2.setName(letterPublisher19);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher19, 0.0d);
        java.lang.Class<?> wildcardClass25 = newsletter24.getClass();
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (short) -1);
        double double16 = newsletter15.getCost();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.Class<?> wildcardClass18 = letterPublisher17.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        objects.User user4 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher18, (double) 1);
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher18, (double) 10.0f);
        java.lang.Class<?> wildcardClass28 = letterPublisher18.getClass();
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) (short) 100);
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        double double5 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.User user7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = newsletter2.isSubscribed(user7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        objects.User user36 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) 1.0f);
        newsletter11.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter11.setName(letterPublisher21);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher21, 0.0d);
        java.lang.String str26 = newsletter25.getUrl();
        double double27 = newsletter25.getCost();
        double double28 = newsletter25.getCost();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter25.getName();
        newsletter2.setName(letterPublisher29);
        objects.User user31 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + letterPublisher29 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher29.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = null;
        objects.Newsletter newsletter6 = new objects.Newsletter(letterPublisher4, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter6.getName();
        newsletter6.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter11.getName();
        java.lang.String str14 = newsletter11.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher15 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter11.setName(letterPublisher15);
        newsletter6.setName(letterPublisher15);
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        newsletter6.setName(letterPublisher25);
        newsletter2.setName(letterPublisher25);
        newsletter2.displayNews();
        java.lang.String str30 = newsletter2.getUrl();
        java.lang.String str31 = newsletter2.getUrl();
        objects.User user32 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "https://www.usatoday.com/" + "'", str14, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher15 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher15.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "https://www.usatoday.com/" + "'", str30, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "https://www.usatoday.com/" + "'", str31, "https://www.usatoday.com/");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.WASHINGTONPOST;
        newsletter2.setName(letterPublisher6);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) 1.0f);
        newsletter11.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter11.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        newsletter2.setCost(10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter2.getName();
        objects.User user28 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.setCost((int) ' ');
        double double9 = newsletter5.getCost();
        double double10 = newsletter5.getCost();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        newsletter14.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher17 = null;
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter19.getName();
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter19.getName();
        java.lang.String str22 = newsletter19.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter19.setName(letterPublisher23);
        newsletter14.setName(letterPublisher23);
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher23, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher28 = null;
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher28, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher31 = newsletter30.getName();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        newsletter30.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher35 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter30.setName(letterPublisher35);
        newsletter27.setName(letterPublisher35);
        newsletter5.setName(letterPublisher35);
        java.lang.String str39 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher40 = null;
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher40, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher43 = null;
        objects.Newsletter newsletter45 = new objects.Newsletter(letterPublisher43, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher46 = newsletter45.getName();
        objects.Newsletter.LetterPublisher letterPublisher47 = newsletter45.getName();
        newsletter45.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher50 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter45.setName(letterPublisher50);
        java.lang.String str52 = newsletter45.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher53 = newsletter45.getName();
        objects.Newsletter newsletter55 = new objects.Newsletter(letterPublisher53, (double) ' ');
        newsletter42.setName(letterPublisher53);
        newsletter5.setName(letterPublisher53);
        objects.Newsletter newsletter59 = new objects.Newsletter(letterPublisher53, 35.0d);
        newsletter2.setName(letterPublisher53);
        objects.User user61 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 32.0d + "'", double9 == 32.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 32.0d + "'", double10 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "https://www.usatoday.com/" + "'", str22, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher31);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertTrue("'" + letterPublisher35 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher35.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "https://www.usatoday.com/" + "'", str39, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher46);
        org.junit.Assert.assertNull(letterPublisher47);
        org.junit.Assert.assertTrue("'" + letterPublisher50 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher50.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "https://www.usatoday.com/" + "'", str52, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher53 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher53.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str7 = newsletter2.getUrl();
        double double8 = newsletter2.getCost();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter2.getName();
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher9);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        double double7 = newsletter2.getCost();
        double double8 = newsletter2.getCost();
        objects.User user9 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        java.lang.String str7 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        newsletter16.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher19 = null;
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter21.getName();
        objects.Newsletter.LetterPublisher letterPublisher23 = newsletter21.getName();
        java.lang.String str24 = newsletter21.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter21.setName(letterPublisher25);
        newsletter16.setName(letterPublisher25);
        objects.Newsletter.LetterPublisher letterPublisher28 = null;
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher28, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher31 = newsletter30.getName();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        newsletter30.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher35 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter30.setName(letterPublisher35);
        newsletter16.setName(letterPublisher35);
        newsletter12.setName(letterPublisher35);
        newsletter2.setName(letterPublisher35);
        java.lang.Class<?> wildcardClass40 = letterPublisher35.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "https://www.usatoday.com/" + "'", str7, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertNull(letterPublisher23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "https://www.usatoday.com/" + "'", str24, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher31);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertTrue("'" + letterPublisher35 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher35.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, 35.0d);
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher11, (double) (short) -1);
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = newsletter17.isSubscribed(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        newsletter12.setCost((int) ' ');
        double double16 = newsletter12.getCost();
        double double17 = newsletter12.getCost();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher19 = null;
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher19, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter21.getName();
        newsletter21.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher24 = null;
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher24, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher27 = newsletter26.getName();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter26.getName();
        java.lang.String str29 = newsletter26.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher30 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter26.setName(letterPublisher30);
        newsletter21.setName(letterPublisher30);
        objects.Newsletter newsletter34 = new objects.Newsletter(letterPublisher30, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher35 = null;
        objects.Newsletter newsletter37 = new objects.Newsletter(letterPublisher35, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher38 = newsletter37.getName();
        objects.Newsletter.LetterPublisher letterPublisher39 = newsletter37.getName();
        newsletter37.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher42 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter37.setName(letterPublisher42);
        newsletter34.setName(letterPublisher42);
        newsletter12.setName(letterPublisher42);
        java.lang.String str46 = newsletter12.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher47 = null;
        objects.Newsletter newsletter49 = new objects.Newsletter(letterPublisher47, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher50 = null;
        objects.Newsletter newsletter52 = new objects.Newsletter(letterPublisher50, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher53 = newsletter52.getName();
        objects.Newsletter.LetterPublisher letterPublisher54 = newsletter52.getName();
        newsletter52.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher57 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter52.setName(letterPublisher57);
        java.lang.String str59 = newsletter52.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher60 = newsletter52.getName();
        objects.Newsletter newsletter62 = new objects.Newsletter(letterPublisher60, (double) ' ');
        newsletter49.setName(letterPublisher60);
        newsletter12.setName(letterPublisher60);
        newsletter2.setName(letterPublisher60);
        objects.User user66 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher9 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher9.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 32.0d + "'", double16 == 32.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertNull(letterPublisher27);
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "https://www.usatoday.com/" + "'", str29, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher30 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher30.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher38);
        org.junit.Assert.assertNull(letterPublisher39);
        org.junit.Assert.assertTrue("'" + letterPublisher42 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher42.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "https://www.usatoday.com/" + "'", str46, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher53);
        org.junit.Assert.assertNull(letterPublisher54);
        org.junit.Assert.assertTrue("'" + letterPublisher57 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher57.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "https://www.usatoday.com/" + "'", str59, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher60 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher60.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        java.lang.String str17 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = null;
        objects.Newsletter newsletter20 = new objects.Newsletter(letterPublisher18, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter20.getName();
        newsletter20.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher25 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter20.setName(letterPublisher25);
        java.lang.String str27 = newsletter20.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter20.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = null;
        objects.Newsletter newsletter31 = new objects.Newsletter(letterPublisher29, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter31.getName();
        newsletter31.setCost((int) ' ');
        double double35 = newsletter31.getCost();
        double double36 = newsletter31.getCost();
        newsletter31.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher38 = null;
        objects.Newsletter newsletter40 = new objects.Newsletter(letterPublisher38, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter40.getName();
        newsletter40.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher43 = null;
        objects.Newsletter newsletter45 = new objects.Newsletter(letterPublisher43, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher46 = newsletter45.getName();
        objects.Newsletter.LetterPublisher letterPublisher47 = newsletter45.getName();
        java.lang.String str48 = newsletter45.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher49 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter45.setName(letterPublisher49);
        newsletter40.setName(letterPublisher49);
        objects.Newsletter newsletter53 = new objects.Newsletter(letterPublisher49, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher54 = null;
        objects.Newsletter newsletter56 = new objects.Newsletter(letterPublisher54, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher57 = newsletter56.getName();
        objects.Newsletter.LetterPublisher letterPublisher58 = newsletter56.getName();
        newsletter56.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher61 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter56.setName(letterPublisher61);
        newsletter53.setName(letterPublisher61);
        newsletter31.setName(letterPublisher61);
        newsletter20.setName(letterPublisher61);
        newsletter16.setName(letterPublisher61);
        objects.User user67 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter16.accept(user67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertNull(letterPublisher22);
        org.junit.Assert.assertTrue("'" + letterPublisher25 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher25.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.usatoday.com/" + "'", str27, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher28 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher28.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 32.0d + "'", double35 == 32.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 32.0d + "'", double36 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertNull(letterPublisher46);
        org.junit.Assert.assertNull(letterPublisher47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "https://www.usatoday.com/" + "'", str48, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher49 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher49.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher57);
        org.junit.Assert.assertNull(letterPublisher58);
        org.junit.Assert.assertTrue("'" + letterPublisher61 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher61.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.setCost((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        newsletter2.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher7 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter2.setName(letterPublisher7);
        java.lang.String str9 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter2.getName();
        newsletter2.displayNews();
        objects.User user13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = newsletter2.isSubscribed(user13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertTrue("'" + letterPublisher7 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher7.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        newsletter7.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher12 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher12);
        newsletter2.setName(letterPublisher12);
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher12, 0.0d);
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher12, 0.0d);
        double double19 = newsletter18.getCost();
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = newsletter18.isSubscribed(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertTrue("'" + letterPublisher12 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher12.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((-1));
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter8.getName();
        newsletter8.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher13 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter8.setName(letterPublisher13);
        java.lang.String str15 = newsletter8.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter8.getName();
        newsletter2.setName(letterPublisher16);
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "https://www.usatoday.com/" + "'", str15, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher16 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher16.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 0L);
        double double3 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher8 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter7.setName(letterPublisher8);
        newsletter7.setCost(1);
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        newsletter14.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter14.setName(letterPublisher19);
        java.lang.String str21 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher22 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher23 = null;
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher23, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter25.getName();
        newsletter25.setCost((int) ' ');
        double double29 = newsletter25.getCost();
        double double30 = newsletter25.getCost();
        newsletter25.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher32 = null;
        objects.Newsletter newsletter34 = new objects.Newsletter(letterPublisher32, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher35 = newsletter34.getName();
        newsletter34.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher37 = null;
        objects.Newsletter newsletter39 = new objects.Newsletter(letterPublisher37, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter39.getName();
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter39.getName();
        java.lang.String str42 = newsletter39.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher43 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter39.setName(letterPublisher43);
        newsletter34.setName(letterPublisher43);
        objects.Newsletter newsletter47 = new objects.Newsletter(letterPublisher43, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher48 = null;
        objects.Newsletter newsletter50 = new objects.Newsletter(letterPublisher48, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter50.getName();
        objects.Newsletter.LetterPublisher letterPublisher52 = newsletter50.getName();
        newsletter50.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher55 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter50.setName(letterPublisher55);
        newsletter47.setName(letterPublisher55);
        newsletter25.setName(letterPublisher55);
        newsletter14.setName(letterPublisher55);
        objects.Newsletter.LetterPublisher letterPublisher60 = null;
        objects.Newsletter newsletter62 = new objects.Newsletter(letterPublisher60, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher63 = newsletter62.getName();
        newsletter62.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher65 = null;
        objects.Newsletter newsletter67 = new objects.Newsletter(letterPublisher65, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher68 = newsletter67.getName();
        objects.Newsletter.LetterPublisher letterPublisher69 = newsletter67.getName();
        java.lang.String str70 = newsletter67.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher71 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter67.setName(letterPublisher71);
        newsletter62.setName(letterPublisher71);
        newsletter14.setName(letterPublisher71);
        newsletter7.setName(letterPublisher71);
        newsletter2.setName(letterPublisher71);
        objects.User user77 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + letterPublisher8 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher8.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "https://www.usatoday.com/" + "'", str21, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher22 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher22.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 32.0d + "'", double29 == 32.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 32.0d + "'", double30 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher35);
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "https://www.usatoday.com/" + "'", str42, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher43 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher43.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertNull(letterPublisher52);
        org.junit.Assert.assertTrue("'" + letterPublisher55 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher55.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher63);
        org.junit.Assert.assertNull(letterPublisher68);
        org.junit.Assert.assertNull(letterPublisher69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "https://www.usatoday.com/" + "'", str70, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher71 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher71.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        java.lang.String str5 = newsletter2.getUrl();
        objects.User user6 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        java.lang.Class<?> wildcardClass8 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        newsletter15.setCost(100);
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter15.subscribe(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        objects.Newsletter.LetterPublisher letterPublisher0 = objects.Newsletter.LetterPublisher.NYTIMES;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 100L);
        java.lang.Class<?> wildcardClass3 = letterPublisher0.getClass();
        org.junit.Assert.assertTrue("'" + letterPublisher0 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher0.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        newsletter10.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher13 = null;
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter15.getName();
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter15.getName();
        java.lang.String str18 = newsletter15.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher19 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter15.setName(letterPublisher19);
        newsletter10.setName(letterPublisher19);
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher19, 10.0d);
        newsletter2.setName(letterPublisher19);
        java.lang.String str25 = newsletter2.getUrl();
        newsletter2.displayNews();
        java.lang.String str27 = newsletter2.getUrl();
        newsletter2.setCost(100);
        java.lang.Class<?> wildcardClass30 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "https://www.usatoday.com/" + "'", str18, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher19 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher19.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "https://www.nytimes.com/" + "'", str25, "https://www.nytimes.com/");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.nytimes.com/" + "'", str27, "https://www.nytimes.com/");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter5.getName();
        newsletter5.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher10 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter5.setName(letterPublisher10);
        java.lang.String str12 = newsletter5.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter5.getName();
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher13, (double) ' ');
        newsletter2.setName(letterPublisher13);
        double double17 = newsletter2.getCost();
        double double18 = newsletter2.getCost();
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertTrue("'" + letterPublisher10 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher10.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "https://www.usatoday.com/" + "'", str12, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher13 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher13.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.setCost((int) ' ');
        double double6 = newsletter2.getCost();
        double double7 = newsletter2.getCost();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter11.getName();
        newsletter11.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        java.lang.String str19 = newsletter16.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher20 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter16.setName(letterPublisher20);
        newsletter11.setName(letterPublisher20);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher20, 0.0d);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter27.getName();
        newsletter27.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher32 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter27.setName(letterPublisher32);
        newsletter24.setName(letterPublisher32);
        newsletter2.setName(letterPublisher32);
        objects.Newsletter newsletter37 = new objects.Newsletter(letterPublisher32, 0.0d);
        objects.User user38 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter37.accept(user38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 32.0d + "'", double7 == 32.0d);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "https://www.usatoday.com/" + "'", str19, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher20 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher20.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertTrue("'" + letterPublisher32 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher32.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        double double3 = newsletter2.getCost();
        newsletter2.setCost((int) 'a');
        objects.Newsletter.LetterPublisher letterPublisher6 = null;
        objects.Newsletter newsletter8 = new objects.Newsletter(letterPublisher6, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter8.getName();
        newsletter8.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher11 = null;
        objects.Newsletter newsletter13 = new objects.Newsletter(letterPublisher11, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher14 = newsletter13.getName();
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter13.getName();
        java.lang.String str16 = newsletter13.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher17 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter13.setName(letterPublisher17);
        newsletter8.setName(letterPublisher17);
        objects.Newsletter newsletter21 = new objects.Newsletter(letterPublisher17, (double) (short) -1);
        newsletter2.setName(letterPublisher17);
        objects.Newsletter newsletter24 = new objects.Newsletter(letterPublisher17, (double) (-1.0f));
        objects.Newsletter newsletter26 = new objects.Newsletter(letterPublisher17, (double) 0L);
        java.lang.String str27 = newsletter26.getUrl();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher14);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "https://www.usatoday.com/" + "'", str16, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "https://www.nytimes.com/" + "'", str27, "https://www.nytimes.com/");
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) 1.0f);
        java.lang.Class<?> wildcardClass16 = letterPublisher11.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher23 = null;
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher23, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher26 = newsletter25.getName();
        newsletter25.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher28 = null;
        objects.Newsletter newsletter30 = new objects.Newsletter(letterPublisher28, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher31 = newsletter30.getName();
        objects.Newsletter.LetterPublisher letterPublisher32 = newsletter30.getName();
        java.lang.String str33 = newsletter30.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher34 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter30.setName(letterPublisher34);
        newsletter25.setName(letterPublisher34);
        objects.Newsletter.LetterPublisher letterPublisher37 = null;
        objects.Newsletter newsletter39 = new objects.Newsletter(letterPublisher37, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter39.getName();
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter39.getName();
        newsletter39.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher44 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter39.setName(letterPublisher44);
        newsletter25.setName(letterPublisher44);
        newsletter22.setName(letterPublisher44);
        newsletter2.setName(letterPublisher44);
        objects.Newsletter.LetterPublisher letterPublisher49 = newsletter2.getName();
        java.lang.Class<?> wildcardClass50 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher26);
        org.junit.Assert.assertNull(letterPublisher31);
        org.junit.Assert.assertNull(letterPublisher32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "https://www.usatoday.com/" + "'", str33, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher34 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher34.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertTrue("'" + letterPublisher44 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher44.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertTrue("'" + letterPublisher49 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher49.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        newsletter2.displayNews();
        objects.User user18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = newsletter2.isSubscribed(user18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) 100);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.unsubscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) 1.0f);
        newsletter5.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter5.getName();
        objects.Newsletter.LetterPublisher letterPublisher10 = null;
        objects.Newsletter newsletter12 = new objects.Newsletter(letterPublisher10, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher13 = newsletter12.getName();
        newsletter12.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher15 = null;
        objects.Newsletter newsletter17 = new objects.Newsletter(letterPublisher15, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter17.getName();
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter17.getName();
        java.lang.String str20 = newsletter17.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter17.setName(letterPublisher21);
        newsletter12.setName(letterPublisher21);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher21, (double) (short) -1);
        newsletter5.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.Newsletter newsletter29 = new objects.Newsletter(letterPublisher21, (double) ' ');
        java.lang.Class<?> wildcardClass30 = letterPublisher21.getClass();
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertNull(letterPublisher13);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "https://www.usatoday.com/" + "'", str20, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter2.setName(letterPublisher14);
        newsletter2.displayNews();
        newsletter2.setCost((int) (short) 0);
        objects.User user20 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter2.setName(letterPublisher6);
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher6, (double) (byte) -1);
        objects.User user10 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter9.unsubscribe(user10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.NYTIMES));
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = objects.Newsletter.LetterPublisher.WASHINGTONPOST;
        newsletter2.setName(letterPublisher6);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher9 = null;
        objects.Newsletter newsletter11 = new objects.Newsletter(letterPublisher9, (double) 1.0f);
        newsletter11.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter11.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        newsletter27.displayNews();
        newsletter27.displayNews();
        newsletter27.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher32 = null;
        objects.Newsletter newsletter34 = new objects.Newsletter(letterPublisher32, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher35 = newsletter34.getName();
        newsletter34.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher37 = null;
        objects.Newsletter newsletter39 = new objects.Newsletter(letterPublisher37, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter39.getName();
        objects.Newsletter.LetterPublisher letterPublisher41 = newsletter39.getName();
        java.lang.String str42 = newsletter39.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher43 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter39.setName(letterPublisher43);
        newsletter34.setName(letterPublisher43);
        objects.Newsletter newsletter47 = new objects.Newsletter(letterPublisher43, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher48 = null;
        objects.Newsletter newsletter50 = new objects.Newsletter(letterPublisher48, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher51 = newsletter50.getName();
        newsletter50.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher53 = null;
        objects.Newsletter newsletter55 = new objects.Newsletter(letterPublisher53, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher56 = newsletter55.getName();
        objects.Newsletter.LetterPublisher letterPublisher57 = newsletter55.getName();
        java.lang.String str58 = newsletter55.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher59 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter55.setName(letterPublisher59);
        newsletter50.setName(letterPublisher59);
        objects.Newsletter.LetterPublisher letterPublisher62 = null;
        objects.Newsletter newsletter64 = new objects.Newsletter(letterPublisher62, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher65 = newsletter64.getName();
        objects.Newsletter.LetterPublisher letterPublisher66 = newsletter64.getName();
        newsletter64.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher69 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter64.setName(letterPublisher69);
        newsletter50.setName(letterPublisher69);
        newsletter47.setName(letterPublisher69);
        newsletter27.setName(letterPublisher69);
        objects.Newsletter newsletter75 = new objects.Newsletter(letterPublisher69, (double) (-1L));
        newsletter2.setName(letterPublisher69);
        objects.User user77 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.unsubscribe(user77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertTrue("'" + letterPublisher6 + "' != '" + objects.Newsletter.LetterPublisher.WASHINGTONPOST + "'", letterPublisher6.equals(objects.Newsletter.LetterPublisher.WASHINGTONPOST));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher35);
        org.junit.Assert.assertNull(letterPublisher40);
        org.junit.Assert.assertNull(letterPublisher41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "https://www.usatoday.com/" + "'", str42, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher43 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher43.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher51);
        org.junit.Assert.assertNull(letterPublisher56);
        org.junit.Assert.assertNull(letterPublisher57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "https://www.usatoday.com/" + "'", str58, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher59 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher59.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher65);
        org.junit.Assert.assertNull(letterPublisher66);
        org.junit.Assert.assertTrue("'" + letterPublisher69 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher69.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        java.lang.String str3 = newsletter2.getUrl();
        java.lang.String str4 = newsletter2.getUrl();
        objects.User user5 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.accept(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.visit(objects.Newsletter)\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "https://www.usatoday.com/" + "'", str3, "https://www.usatoday.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "https://www.usatoday.com/" + "'", str4, "https://www.usatoday.com/");
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter.LetterPublisher letterPublisher14 = null;
        objects.Newsletter newsletter16 = new objects.Newsletter(letterPublisher14, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter16.getName();
        objects.Newsletter.LetterPublisher letterPublisher18 = newsletter16.getName();
        newsletter16.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher21 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter16.setName(letterPublisher21);
        newsletter2.setName(letterPublisher21);
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher25 = null;
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher25, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher28 = newsletter27.getName();
        newsletter27.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        java.lang.String str35 = newsletter32.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher36 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter32.setName(letterPublisher36);
        newsletter27.setName(letterPublisher36);
        objects.Newsletter newsletter40 = new objects.Newsletter(letterPublisher36, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher41 = null;
        objects.Newsletter newsletter43 = new objects.Newsletter(letterPublisher41, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher44 = newsletter43.getName();
        newsletter43.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher46 = null;
        objects.Newsletter newsletter48 = new objects.Newsletter(letterPublisher46, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher49 = newsletter48.getName();
        objects.Newsletter.LetterPublisher letterPublisher50 = newsletter48.getName();
        java.lang.String str51 = newsletter48.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher52 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter48.setName(letterPublisher52);
        newsletter43.setName(letterPublisher52);
        objects.Newsletter.LetterPublisher letterPublisher55 = null;
        objects.Newsletter newsletter57 = new objects.Newsletter(letterPublisher55, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher58 = newsletter57.getName();
        objects.Newsletter.LetterPublisher letterPublisher59 = newsletter57.getName();
        newsletter57.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher62 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter57.setName(letterPublisher62);
        newsletter43.setName(letterPublisher62);
        newsletter40.setName(letterPublisher62);
        newsletter2.setName(letterPublisher62);
        objects.Newsletter newsletter68 = new objects.Newsletter(letterPublisher62, (double) (short) 1);
        objects.User user69 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter68.unsubscribe(user69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher17);
        org.junit.Assert.assertNull(letterPublisher18);
        org.junit.Assert.assertTrue("'" + letterPublisher21 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher21.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNull(letterPublisher28);
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "https://www.usatoday.com/" + "'", str35, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher36 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher36.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher44);
        org.junit.Assert.assertNull(letterPublisher49);
        org.junit.Assert.assertNull(letterPublisher50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "https://www.usatoday.com/" + "'", str51, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher52 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher52.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher58);
        org.junit.Assert.assertNull(letterPublisher59);
        org.junit.Assert.assertTrue("'" + letterPublisher62 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher62.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 1);
        newsletter2.displayNews();
        newsletter2.displayNews();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        double double7 = newsletter2.getCost();
        double double8 = newsletter2.getCost();
        double double9 = newsletter2.getCost();
        java.lang.Class<?> wildcardClass10 = newsletter2.getClass();
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        objects.Newsletter.LetterPublisher letterPublisher5 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher7 = null;
        objects.Newsletter newsletter9 = new objects.Newsletter(letterPublisher7, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher10 = newsletter9.getName();
        newsletter9.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        objects.Newsletter.LetterPublisher letterPublisher16 = newsletter14.getName();
        java.lang.String str17 = newsletter14.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher18 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter14.setName(letterPublisher18);
        newsletter9.setName(letterPublisher18);
        objects.Newsletter newsletter22 = new objects.Newsletter(letterPublisher18, (double) (short) -1);
        newsletter2.setName(letterPublisher18);
        objects.Newsletter newsletter25 = new objects.Newsletter(letterPublisher18, (double) ' ');
        objects.Newsletter newsletter27 = new objects.Newsletter(letterPublisher18, (double) (short) 100);
        java.lang.Class<?> wildcardClass28 = letterPublisher18.getClass();
        org.junit.Assert.assertNull(letterPublisher5);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher10);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "https://www.usatoday.com/" + "'", str17, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher18 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher18.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        newsletter2.setCost((int) ' ');
        newsletter2.setCost((int) (byte) 10);
        newsletter2.displayNews();
        double double8 = newsletter2.getCost();
        java.lang.String str9 = newsletter2.getUrl();
        newsletter2.setCost((int) (short) -1);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "https://www.usatoday.com/" + "'", str9, "https://www.usatoday.com/");
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher4 = newsletter2.getName();
        java.lang.String str5 = newsletter2.getUrl();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher7 = newsletter2.getName();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) 0L);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = null;
        objects.Newsletter newsletter14 = new objects.Newsletter(letterPublisher12, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher15 = newsletter14.getName();
        newsletter14.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher17 = null;
        objects.Newsletter newsletter19 = new objects.Newsletter(letterPublisher17, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher20 = newsletter19.getName();
        objects.Newsletter.LetterPublisher letterPublisher21 = newsletter19.getName();
        java.lang.String str22 = newsletter19.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher23 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter19.setName(letterPublisher23);
        newsletter14.setName(letterPublisher23);
        objects.Newsletter.LetterPublisher letterPublisher26 = null;
        objects.Newsletter newsletter28 = new objects.Newsletter(letterPublisher26, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher29 = newsletter28.getName();
        objects.Newsletter.LetterPublisher letterPublisher30 = newsletter28.getName();
        newsletter28.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher33 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter28.setName(letterPublisher33);
        newsletter14.setName(letterPublisher33);
        newsletter10.setName(letterPublisher33);
        objects.Newsletter newsletter38 = new objects.Newsletter(letterPublisher33, 32.0d);
        java.lang.String str39 = newsletter38.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher40 = newsletter38.getName();
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher40, (double) (short) 0);
        newsletter2.setName(letterPublisher40);
        objects.User user44 = null;
        // The following exception was thrown during execution in test generation
        try {
            newsletter2.subscribe(user44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"objects.User.getId()\" because \"user\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "https://www.usatoday.com/" + "'", str5, "https://www.usatoday.com/");
        org.junit.Assert.assertNull(letterPublisher7);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher15);
        org.junit.Assert.assertNull(letterPublisher20);
        org.junit.Assert.assertNull(letterPublisher21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "https://www.usatoday.com/" + "'", str22, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher23 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher23.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher29);
        org.junit.Assert.assertNull(letterPublisher30);
        org.junit.Assert.assertTrue("'" + letterPublisher33 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher33.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "https://www.usatoday.com/" + "'", str39, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher40 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher40.equals(objects.Newsletter.LetterPublisher.USATODAY));
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher3 = newsletter2.getName();
        newsletter2.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher5 = null;
        objects.Newsletter newsletter7 = new objects.Newsletter(letterPublisher5, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher8 = newsletter7.getName();
        objects.Newsletter.LetterPublisher letterPublisher9 = newsletter7.getName();
        java.lang.String str10 = newsletter7.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher11 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter7.setName(letterPublisher11);
        newsletter2.setName(letterPublisher11);
        objects.Newsletter newsletter15 = new objects.Newsletter(letterPublisher11, (double) (byte) -1);
        objects.Newsletter.LetterPublisher letterPublisher16 = null;
        objects.Newsletter newsletter18 = new objects.Newsletter(letterPublisher16, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher19 = newsletter18.getName();
        newsletter18.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher21 = null;
        objects.Newsletter newsletter23 = new objects.Newsletter(letterPublisher21, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher24 = newsletter23.getName();
        objects.Newsletter.LetterPublisher letterPublisher25 = newsletter23.getName();
        java.lang.String str26 = newsletter23.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher27 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter23.setName(letterPublisher27);
        newsletter18.setName(letterPublisher27);
        objects.Newsletter.LetterPublisher letterPublisher30 = null;
        objects.Newsletter newsletter32 = new objects.Newsletter(letterPublisher30, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher33 = newsletter32.getName();
        objects.Newsletter.LetterPublisher letterPublisher34 = newsletter32.getName();
        newsletter32.setCost((int) '#');
        objects.Newsletter.LetterPublisher letterPublisher37 = objects.Newsletter.LetterPublisher.USATODAY;
        newsletter32.setName(letterPublisher37);
        newsletter18.setName(letterPublisher37);
        newsletter15.setName(letterPublisher37);
        objects.Newsletter newsletter42 = new objects.Newsletter(letterPublisher37, (double) 'a');
        objects.Newsletter newsletter44 = new objects.Newsletter(letterPublisher37, (double) 0.0f);
        java.lang.Class<?> wildcardClass45 = newsletter44.getClass();
        org.junit.Assert.assertNull(letterPublisher3);
        org.junit.Assert.assertNull(letterPublisher8);
        org.junit.Assert.assertNull(letterPublisher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "https://www.usatoday.com/" + "'", str10, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher11 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher11.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher19);
        org.junit.Assert.assertNull(letterPublisher24);
        org.junit.Assert.assertNull(letterPublisher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "https://www.usatoday.com/" + "'", str26, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher27 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher27.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertNull(letterPublisher33);
        org.junit.Assert.assertNull(letterPublisher34);
        org.junit.Assert.assertTrue("'" + letterPublisher37 + "' != '" + objects.Newsletter.LetterPublisher.USATODAY + "'", letterPublisher37.equals(objects.Newsletter.LetterPublisher.USATODAY));
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        objects.Newsletter.LetterPublisher letterPublisher0 = null;
        objects.Newsletter newsletter2 = new objects.Newsletter(letterPublisher0, (double) 1.0f);
        objects.Newsletter.LetterPublisher letterPublisher3 = null;
        objects.Newsletter newsletter5 = new objects.Newsletter(letterPublisher3, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher6 = newsletter5.getName();
        newsletter5.displayNews();
        objects.Newsletter.LetterPublisher letterPublisher8 = null;
        objects.Newsletter newsletter10 = new objects.Newsletter(letterPublisher8, (double) (byte) 10);
        objects.Newsletter.LetterPublisher letterPublisher11 = newsletter10.getName();
        objects.Newsletter.LetterPublisher letterPublisher12 = newsletter10.getName();
        java.lang.String str13 = newsletter10.getUrl();
        objects.Newsletter.LetterPublisher letterPublisher14 = objects.Newsletter.LetterPublisher.NYTIMES;
        newsletter10.setName(letterPublisher14);
        newsletter5.setName(letterPublisher14);
        objects.Newsletter.LetterPublisher letterPublisher17 = newsletter5.getName();
        newsletter2.setName(letterPublisher17);
        double double19 = newsletter2.getCost();
        newsletter2.setCost((int) (short) 100);
        org.junit.Assert.assertNull(letterPublisher6);
        org.junit.Assert.assertNull(letterPublisher11);
        org.junit.Assert.assertNull(letterPublisher12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "https://www.usatoday.com/" + "'", str13, "https://www.usatoday.com/");
        org.junit.Assert.assertTrue("'" + letterPublisher14 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher14.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + letterPublisher17 + "' != '" + objects.Newsletter.LetterPublisher.NYTIMES + "'", letterPublisher17.equals(objects.Newsletter.LetterPublisher.NYTIMES));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }
}

